package com.augurit.common.common.form;

import android.content.Context;

import com.augurit.agmobile.busi.bpm.dict.util.DictBuilder;
import com.augurit.agmobile.busi.bpm.form.model.FormInfo;
import com.augurit.agmobile.busi.bpm.form.util.ElementBuilder;
import com.augurit.agmobile.busi.bpm.form.util.FormBuilder;
import com.augurit.agmobile.busi.bpm.form.util.WidgetBuilder;
import com.augurit.agmobile.busi.bpm.widget.view.map.arcgis.MapSelectMode;
import com.augurit.agmobile.busi.common.login.LoginManager;
import com.augurit.agmobile.common.lib.file.FileUtils;
import com.augurit.agmobile.common.lib.location.LocationManagerType;
import com.augurit.agmobile.common.lib.time.TimeUtil;
import com.augurit.agmobile.common.view.combineview.AGEditText;
import com.augurit.agmobile.lib.baidumap.location.BaiduLocationTransform;
import com.augurit.common.R;
import com.augurit.common.common.manager.DispatchConstant;
import com.augurit.common.common.model.ElementInfo;
import com.augurit.common.common.util.LocalDictUtil;
import com.augurit.common.dict.AwDictRepository;
import com.augurit.common.dict.DictUtil;
import com.augurit.common.dict.DictUtils;
import com.augurit.common.dict.LocalDictItemUtil;
import com.esri.core.map.Field;
import com.google.gson.Gson;

import java.util.Date;
import java.util.List;

import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_ALLOW_CANCEL_CHECK;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_AUTO_LOCATE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_DATA_CLASS_NAME;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_DEFAULT_SELECTION;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_DICT_TYPE_CODE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_HINT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_IS_ENABLE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_IS_REQUIRED;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_IS_SHOW_MAP;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_IS_VISIBLE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_LIST_DATA_URL;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_MAP_JUMP_ACTIVITY;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_MAX_LIMIT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_MIN_LIMIT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_MULTICHECK_ALLOW_TEXTINPUT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_MULTICHECK_TEXT_INPUT_CODES;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_RELATIVE_ELEMENT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_REQUEST_KEY;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_RETURN_DICT_CODE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_SHOW_DICT_CHILDREN;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_TEXT_INPUT_TYPE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_TITLE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetProperty.PROPERTY_ZOOM_SCALE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.CHECKBOX;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.CHECKBOX_EXPAND;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.CHECKBOX_SPINNER;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.EDITFIELD;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.EDITFIELD_VOICE;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.EDITTEXT;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.FILEPICKER;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.FORM_BUTTON;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.IMAGEPICKER;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.MAP_ARCGIS;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.MAP_BAIDU;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.RADIO;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.RADIO_CHECKBOX;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.SPINNER;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.SPINNER_MULTI_FUNCTION;
import static com.augurit.agmobile.busi.bpm.widget.WidgetType.TIMEPICKER;
import static com.augurit.common.common.form.AwWidgetFactory.AW_PROBLEM_SELECTION_KIT;
import static com.augurit.common.common.form.AwWidgetFactory.AW_PROBLEM_SELECTION_NW;

/**
 * 水务表单本地配置
 *
 * @author 创建人 ：xiejiexin
 * @version 1.0
 * @package 包名 ：com.augurit.agmobile.agwater5.form.source
 * @createTime 创建时间 ：2018/8/28
 * @modifyBy 修改人 ：xiejiexin
 * @modifyTime 修改时间 ：2018/8/28
 * @modifyMemo 修改备注：
 */
public class AwFormConfig {

    public static final String FORM_DRAINAGE_PROBLEM = "FORM_PROBLEM";
    public static final String FORM_DRAINAGE_PROBLEM1 = "FORM_PROBLEM1";
    public static final String FORM_EMERGENCY_DISPATCH = "FORM_EMREGENCY_DISPATCH";
    public static final String FORM_EMERGENCY_PROBLEM = "FORM_EMERGENCY_PROBLEM";
    public static final String FORM_EVENT_DETAIL = "FORM_EVENT_DETAIL";
    public static final String FORM_EVENT_DETAIL_NW = "FORM_EVENT_DETAIL_NW";
    /**
     * 农污问题上报
     */
    public static final String NW_PROBLEM_FORM = "NW_PROBLEM_FORM";
    /**
     * 数据新增
     */
    public static final String FORM_DRAINAGE_UPLOAD_NEW = "FORM_DRAINAGE_UPLOAD_NEW";
    public static final String FORM_HANDLE_EVENT_DETAIL = "FORM_HANDLE_EVENT_DETAIL";
    public static final String FORM_HANDLE_EVENT_DETAIL_NW = "FORM_HANDLE_EVENT_DETAIL_NW";
    public static final String FORM_HANDLE_EVENT_DETAIL12345 = "FORM_HANDLE_EVENT_DETAIL12345";
    public static final String FORM_DRAINAGE_REPAIR = "FORM_DRAINAGE_REPAIR";
    /**
     * 数据校核
     */
    public static final String FORM_CORRECT_CONFIRIM_FACILITY = "FORM_CORRECT_CONFIRIM_FACILITY";
    /**
     * 原设施信息
     */
    public static final String FORM_ORIGIN_FACILITY = "FORM_ORIGIN_FACILITY";
    /**
     * 巡检日志
     */
    public static final String FORM_DAILY_PATROL_UPLOAD = "FORM_DAILY_PATROL_UPLOAD";
    /**
     * 巡检任务详情
     */
    public static final String FORM_DAILY_PATROL_DETAIL = "FORM_DAILY_PATROL_DETAIL";

    /**
     * 新增门牌
     */
    public static final String FORM_ADD_DOOR_NO = "FORM_ADD_DOOR_NO";

    /**
     * 处理问题 － 提交
     */
    public static final String FORM_PROBLEM_HANDLE_SUBMIT = "FORM_PROBLEM_HANDLE_SUBMIT";
    /**
     * 问题上报
     */
    public static final String FORM_PROBLEM_UPLOAD = "FORM_PROBLEM_UPLOAD";

    /**
     * 排水户信息表 基本情况
     */
    public static final String FORM_SEWERAGE_BASE_INFO = "FORM_SEWERAGE_BASE_INFO";

    /**
     * 排水户信息表 行业类别
     */
    public static final String FORM_SEWERAGE_TYPES = "FORM_SEWERAGE_TYPES";

    /**
     * 排水户信息表 添加接驳井
     */
    public static final String FORM_SEWERAGE_WELL = "FORM_SEWERAGE_WELL";
    /**
     * 排水户信息表 上报信息
     */
    public static final String FORM_DOOR_NO_UP_DETAIL = "FORM_DOOR_NO_UP_DETAIL";

    /**
     * 排水户信息表 预处理设施
     */
    public static final String FORM_SEWERAGE_PROCESS_DEVICE = "FORM_SEWERAGE_PROCESS_DEVICE";
    /**
     * 排水户 事务公开 日常巡检详情
     */
    public static final String FORM_PSH_PATROL_DETAIL = "FORM_PSH_PATROL_DETAIL";

    /**
     * 接駁井上报信息
     */
    public static final String FORM_MY_WELL_UPLOAD = "FORM_MY_WELL_UPLOAD";

    /**
     * 門牌號上报信息
     */
    public static final String FORM_MY_DOOR_NO_UPLOAD = "FORM_MY_DOOR_NO_UPLOAD";
//    /**
//     * 日常巡检
//     */
//    public static final String FORM_YJFH_INSPECT = "FORM_YJFH_INSPECT";

    //农污
    /**
     * 考核表内容
     */
    public static final String FORM_NW_CHECK_CONTENT = "FORM_NW_CHECK_CONTENT";

    /**
     * 考核表分数内容
     */
    public static final String FORM_NW_NEW_CHECK_CONTENT = "FORM_NW_NEW_CHECK_CONTENT";
    /**
     * 农污问题上报
     */
    public static final String FORM_NW_PROBLEM_UPLOAD = "FORM_NW_PROBLEM_UPLOAD";
    /**
     * 考核问题，只读
     */
    public static final String NW_PROBLEM_READ_FORM = "NW_PROBLEM_READ_FORM";

    public static final String FORM_NW_ADD_DETAIL = "FORM_NW_ADD_DETAIL";
    /**
     * 农污数据新增
     */
    public static final String FORM_SEWAGE_ADD_NEW = "FORM_SEWAGE_ADD_NEW";
    /**
     * 农污添加附属设施
     */
    public static final String FORM_ADD_FACILITY = "FORM_ADD_FACILITY";

    /**
     * 排水户问题上报
     */
    public static final String FORM_PSH_UPLOAD = "FORM_PSH_UPLOAD";
    /**
     * 数据修补测新增详细
     */
    public static final String FORM_ADD_FACILITY_DETAIL = "FORM_ADD_FACILITY_DETAIL";

    /**
     * 排水户问题详情
     */
    public static final String FORM_PSH_EVENT_DETAIL = "FORM_PSH_EVENT_DETAIL";

    /**
     * 排水户巡检日志
     */
    public static final String FORM_PSH_DAILY_PATROL_UPLOAD = "FORM_PSH_DAILY_PATROL_UPLOAD";
    /**
     * 应急问题
     */
    public static final String FORM_EMERGENCY_PROBLEM_UPLOAD = "FORM_EMERGENCY_PROBLEM_UPLOAD";
    /**
     * 应急问题处理页
     */
    public static final String FORM_EMERGENCY_PROBLEM_DISPOSE = "FORM_EMERGENCY_PROBLEM_DISPOSE";

    public static final String FORM_MAINTAIN_ADD_NEW = "FORM_MAINTAIN_ADD_NEW";
    public static final String FORM_NW_CHECK = "FORM_NW_CHECK";

    /**
     * 一雨一報詳情1
     */
    public static final String FORM_REPORT_DETAIL_ONE = "FORM_REPORT_DETAIL_ONE";
    /**
     * 一雨一報詳情2
     */
    public static final String FORM_REPORT_DETAIL_TWO = "FORM_REPORT_DETAIL_TWO";

    /**
     * 一雨一报新增
     */
    public static final String FORM_ADD_REPORT = "FORM_ADD_REPORT";

    /**
     * 交办反馈
     */
    public static final String FORM_FEEDBACK_UPLOAD = "FORM_FEEDBACK_UPLOAD";
    public static final String FORM_FEEDBACK_ORIGINAL = "FORM_FEEDBACK_ORIGINAL";
    public static final String FORM_FEEDBACK_OPINION = "FORM_FEEDBACK_OPINION";

    /**
     * 应急调度(天气预警新增)
     */
    public static final String FORM_FLOOD_UPLOAD = "FORM_FLOOD_UPLOAD";

    public static final String FORM_RELEASE_WX_UPLOAD = "FORM_RELEASE_WX_UPLOAD";

    public static final String FORM_FLOOD_SMS_UPLOAD = "FORM_FLOOD_SMS_UPLOAD";

    public static final String FORM_FLOOD_SMS_DETAIL = "FORM_FLOOD_SMS_DETAIL";

    public static final String FORM_FLOOD_EMERGENCY_PLAN = "FORM_FLOOD_EMERGENCY_PLAN";

    public static final String FORM_FLOOD_SUPERVISE = "FORM_FLOOD_SUPERVISE";

    /**
     * 物资库
     */

    public static final String FORM_ADD_STORE = "FORM_ADD_STORE";


    /**
     * 发送到下一环节
     */
    public static final String FORM_SEND_TO_NEXTLINK = "FORM_SEND_TO_NEXTLINK";

    /**
     * 发送到下一环节
     */
    public static final String FORM_NEW_SEND_TO_NEXTLINK = "FORM_NEW_SEND_TO_NEXTLINK";

    /**
     * 结果物补充材料
     */
    public static final String FORM_RESULT_GOODS_MATERIAL="FORM_RESULT_GOODS_MATERIAL";

    /**
     * 河道问题上报
     */
    public static final String RIVER_REPORT_FORM = "RIVER_REPORT_FORM";

    public static final String FORM_YJFH_PROBLEM = "YJFH_FORM_PROBLEM";

    public static final String FORM_YJFH_INSPECT = "FORM_YJFH_INSPECT";


    /**
     * 临河监督检查上报
     */
    public static final String BY_RIVER_UPLOAD = "BY_RIVER_UPLOAD";
    /**
     * 临河工程监督上报
     */
    public static final String BY_RIVER_PROJECT_UPLOAD = "BY_RIVER_PROJECT_UPLOAD";
    /**
     * 临河问题上报
     */
    public static final String BY_RIVER_PROBLEM_UPLOAD = "BY_RIVER_PROBLEM_UPLOAD";

    /**
     * 河道上报详情
     */
    public static final String RIVER_REPORT_DETAIL = "RIVER_REPORT_DETAIL";
    public static final String FORM_REPORT_DETAIL = "FORM_REPORT_DETAIL";


    /**
     * 临河问题上报
     */
    public static final String FORM_BY_RIVER_PROBLEM = "FORM_BY_RIVER_PROBLEM";
    public static final String FORM_BY_RIVER_REPORT_DETAIL = "FORM_BY_RIVER_REPORT_DETAIL";

    /**
     * 保存河道巡查记录
     */
    public static final String FORM_SAVE_HEDAO_XC = "FORM_SAVE_HEDAO_XC";
    /**
     * 河道轨迹详情
     */
    public static final String FORM_DETAIL_HEDAO_LIST = "FORM_DETAIL_HEDAO_LIST";
//工程建设
    /**
     * 审批流程详情
     */
    public static final String FORM_GCJS_DECLARE_DETAIL = "FORM_GCJS_DECLARE_DETAIL";

    /**
     * 申报项目信息
     */
    public static final String FORM_GCJS_PROJECT_DETAIL = "FORM_GCJS_PROJECT_DETAIL";

    /**
     * 申报主体信息
     */
    public static final String FORM_DECLARE_MAIN="FORM_DECLARE_MAIN";

    /**
     * 新增批文批复
     */
    public static final String FORM_GCJS_PWPF_ADD = "FORM_GCJS_PWPF_ADD";
    /**
     * 新增证件证照
     */
    public static final String FORM_GCJS_ZJZZ_ADD = "FORM_GCJS_ZJZZ_ADD";
    /**
     * 新增其它结果物
     */
    public static final String FORM_GCJS_QTJGW_ADD = "FORM_GCJS_QTJGW_ADD";

    /**
     * 办理界面--材料补正界面
     */
    public static final String FORM_GCJS_CLBZ = "FORM_GCJS_CLBZ";
    /**
     * 办理界面--申报信息
     */
    public static final String FORM_GCJS_SBXX = "FORM_GCJS_SBXX";
    /**
     * 办理界面--材料补正详细信息
     */
    public static final String FORM_GCJS_DETAIL_CLBZ = "FORM_GCJS_DETAIL_CLBZ";
    /**
     * 办理界面--申报信息--材料详情
     */
    public static final String FORM_GCJS_MATERIAL_DETAIL = "FORM_GCJS_MATERIAL_DETAIL";
    /**
     * 结果物补充五物----材料详情
     */
    public static final String FORM_GCJS_RESULT_GOODS_MATERIAL_DETAIL = "FORM_GCJS_RESULT_GOODS_MATERIAL_DETAIL";
    /**
     * 办理界面--申报信息--特殊程序详情
     */
    public static final String FORM_GCJS_TSCX_DETAIL = "FORM_GCJS_TSCX_DETAIL";

    public static final String FORM_GCJS_TRANSFER = "FORM_GCJS_TRANSFER";

    /**
     * 受理回执信息
     * 不受理回执信息
     * 审批决定通过回执
     * 审批决定不通过回执
     * 补正回执
     */
    public static final String FORM_ACCEPT_RECEIPT= "FORM_ACCEPT_RECEIPT";
    public static final String FORM_NOT_ACCEPT_RECEIPT= "FORM_NOT_ACCEPT_RECEIPT";
    public static final String FORM_APPROVE_THROUGH="FORM_APPROVE_THROUGH";
    public static final String FORM_APPROVE_NOT_THROUGH="FORM_APPROVE_NOT_THROUGH";
    public static final String FORM_CORRECTION_RECEIPT="FORM_CORRECTION_RECEIPT";

    //工程建设公众版
    /**
     * 审批流程详情
     */
    public static final String FORM_GCJS_PUBLIC_SINGLE_UPLOAD_EVENT = "FORM_GCJS_PUBLIC_SINGLE_UPLOAD_EVENT";
    public static final String FORM_GCJS_PUBLIC_MULTI_FIRST_UPLOAD_EVENT = "FORM_GCJS_PUBLIC_MULTI_FIRST_UPLOAD_EVENT";
    public static final String FORM_GCJS_PUBLIC_MULTI_SECOND_UPLOAD_EVENT = "FORM_GCJS_PUBLIC_MULTI_SECOND_UPLOAD_EVENT";

    public static final String FORM_GCJS_PUBLIC_NEW_PROJECT = "FORM_GCJS_PUBLIC_NEW_PROJECT";

    /**
     * 排水巡检-排水设施-管线
     */
    public static final String FORM_DRAINAGE_FACILITY_PIPE = "FORM_DRAINAGE_FACILITY_PIPE";
    /**
     * 排水巡检-排水设施-泵站
     */
    public static final String FORM_DRAINAGE_FACILITY_BZ = "FORM_DRAINAGE_FACILITY_BZ";
    /**
     * 排水巡检-排水设施-排放口
     */
    public static final String FORM_DRAINAGE_FACILITY_PFK = "FORM_DRAINAGE_FACILITY_PFK";
    /**
     * 排水巡检-排水设施-拍门
     */
    public static final String FORM_DRAINAGE_FACILITY_PM = "FORM_DRAINAGE_FACILITY_PM";
    /**
     * 排水巡检-排水设施-水闸
     */
    public static final String FORM_DRAINAGE_FACILITY_SZ = "FORM_DRAINAGE_FACILITY_SZ";
    /**
     * 排水巡检-排水设施-污水厂
     */
    public static final String FORM_DRAINAGE_FACILITY_WSC = "FORM_DRAINAGE_FACILITY_WSC";
    /**
     * 排水巡检-排水设施-窨井
     */
    public static final String FORM_DRAINAGE_FACILITY_YJ = "FORM_DRAINAGE_FACILITY_YJ";
    /**
     * 排水巡检-排水设施-雨水口
     */
    public static final String FORM_DRAINAGE_FACILITY_YSK = "FORM_DRAINAGE_FACILITY_YSK";

    /**
     * 公众投诉
     */
    public static final String FORM_QUALITY_COMPLAIN = "FORM_QUALITY_COMPLAIN";
    /**
     * 河道问题上报
     */
    public static final String FORM_RIVER_UPLOAD = "FORM_RIVER_UPLOAD";
    /**
     * 排水户问题上报
     */
    public static final String FORM_PSH_PROBLEM_UPLOAD = "FORM_PSH_PROBLEM_UPLOAD";
    /**
     * 排水户 和河道 问题处理
     */
    public static final String DEAL_PROBLEM = "DEAL_PROBLEM";

    protected Context mContext;


    public AwFormConfig(Context context) {
        mContext = context;
    }

    public FormInfo getFormInfo(String formCode) {
        switch (formCode) {
            case FORM_DRAINAGE_PROBLEM:
                return getFormDrainageProblem();
            case FORM_DRAINAGE_PROBLEM1:
                return getFormDrainageProblem1();
            case NW_PROBLEM_FORM:
                return getNW_PROBLEM_FORMInfo();
            case FORM_EMERGENCY_DISPATCH:
                return getFormEmergencyDispatch();
            case FORM_EMERGENCY_PROBLEM:
                return getFormEmergencyProblem();
            case FORM_EVENT_DETAIL:
                return getHandleEventDetail();
            case FORM_EVENT_DETAIL_NW:
                return getHandleEventDetailNW();
            case FORM_DRAINAGE_UPLOAD_NEW:
                return getFormDrainageUploadNewData();
            case FORM_CORRECT_CONFIRIM_FACILITY:
                return getCorrectOrConfirimFacility();
            case FORM_HANDLE_EVENT_DETAIL:
                return getHandleEventDetail();
            case FORM_HANDLE_EVENT_DETAIL_NW:
                return getHandleEventDetailNW();
            case FORM_HANDLE_EVENT_DETAIL12345:
                return getHandleEventDetail12345();
            case FORM_ORIGIN_FACILITY:
                return getOriginFacility();
            case FORM_DAILY_PATROL_UPLOAD:
                return getDailyPatrolUpload();
            case FORM_PROBLEM_HANDLE_SUBMIT:
                return getProblemHandleSubmit();
            case FORM_ADD_DOOR_NO:
                return getAddDoorNo();
            case FORM_SEWERAGE_BASE_INFO:
                return getFormSewerageBaseInfo();
            case FORM_SEWERAGE_TYPES:
                return getFormSewerageTypes();
            case FORM_SEWERAGE_WELL:
                return getFormSewerageWell();
            case FORM_DOOR_NO_UP_DETAIL:
                return getFormDoorNoUpDetail();
            case FORM_SEWERAGE_PROCESS_DEVICE:
                return getSewerageProcessDevice();
            case FORM_MY_WELL_UPLOAD:
                return getUploadWellDetail();
            case FORM_MY_DOOR_NO_UPLOAD:
                return getUploadDoorNoDetail();
            case FORM_NW_CHECK_CONTENT:
                return getNWCheckContentDetail();
            case FORM_NW_NEW_CHECK_CONTENT:
                return getNWNewCheckContentDetail();
            case FORM_NW_PROBLEM_UPLOAD:
                return getNWFormProblemUpload();
            case NW_PROBLEM_READ_FORM:
                return getNW_problem_readInfo();
            case FORM_SEWAGE_ADD_NEW:
                return getSewageAddNewData(FORM_SEWAGE_ADD_NEW);
            case FORM_ADD_FACILITY:
                return getFacilityForm();
            case FORM_PSH_PATROL_DETAIL:
                return getPSHPatrolDetail();
            case FORM_NW_ADD_DETAIL:
                return getNWDetailFormInfo();
            case FORM_PSH_UPLOAD:
                return getPshUploadFormInfo();
            case FORM_PSH_EVENT_DETAIL:
                return getPshEvnetDetail();
            case FORM_PSH_DAILY_PATROL_UPLOAD:
                return getPshDailyPatrolUpload();
            case FORM_MAINTAIN_ADD_NEW:
                return getMaintainAddNew();
            case FORM_NW_CHECK:
                return getSewageAddNewData(FORM_NW_CHECK);
            case FORM_FEEDBACK_UPLOAD:
                return getFeedbackUpload();
            case FORM_FEEDBACK_ORIGINAL:
                return getFeedbackOriginal();
            case FORM_FEEDBACK_OPINION:
                return getFeedbackOpinion();
            case FORM_FLOOD_UPLOAD:
                return getWeatherAddNew();
            case FORM_RELEASE_WX_UPLOAD:
                return getReleaseInfo();
            case FORM_FLOOD_SMS_UPLOAD:
                return getSMSAddNew();
            case FORM_FLOOD_SMS_DETAIL:
                return getSMSDetail();
            case FORM_EMERGENCY_PROBLEM_UPLOAD:
                return getEmergency();
            case FORM_REPORT_DETAIL_ONE:
                return getReportOneFormInfo();
            case FORM_REPORT_DETAIL_TWO:
                return getReportTwoFormInfo();
            case FORM_EMERGENCY_PROBLEM_DISPOSE:
                return getEmergencyDispose();
            case FORM_ADD_STORE:
                return getAddStoreInfo();
            case FORM_ADD_REPORT:
                return getAddReport();
            case FORM_FLOOD_EMERGENCY_PLAN:
                return getReservePlanInfo();
            case FORM_FLOOD_SUPERVISE:
                return getResponseInfo();
            case FORM_SEND_TO_NEXTLINK:
                return getSendToNextLink();
            case FORM_NEW_SEND_TO_NEXTLINK:
                return getNewSendToNextLink();
            case FORM_RESULT_GOODS_MATERIAL:
                return getResultGoodsMaterial();
            case FORM_DAILY_PATROL_DETAIL:
                return getDailyPatrolDetail();
            case RIVER_REPORT_FORM:
                return getRiverReportForm();
            case FORM_YJFH_PROBLEM:
                return getYjfhProblemForm(FORM_YJFH_PROBLEM);

            case BY_RIVER_UPLOAD:
                return getByRiverUpload();
            case BY_RIVER_PROJECT_UPLOAD:
                return getByRiverProjectUpload(BY_RIVER_PROJECT_UPLOAD);
            case BY_RIVER_PROBLEM_UPLOAD:
                return getByRiverProblemUpload(BY_RIVER_PROBLEM_UPLOAD);

            case RIVER_REPORT_DETAIL:
                return getRiverReportDetail();
            case FORM_REPORT_DETAIL:
                return getYjfhProblemDetailForm(FORM_REPORT_DETAIL);

            case FORM_BY_RIVER_PROBLEM:
                return getByRiverProblemForm(FORM_BY_RIVER_PROBLEM);

            case FORM_BY_RIVER_REPORT_DETAIL:
                return getByRiverProblemDetailForm(FORM_BY_RIVER_REPORT_DETAIL);
            case FORM_SAVE_HEDAO_XC:
                return getHeDaoXunChaForm(FORM_SAVE_HEDAO_XC);
            case FORM_DETAIL_HEDAO_LIST:
                return getHeDaoDetailForm(FORM_DETAIL_HEDAO_LIST);
            case FORM_GCJS_DECLARE_DETAIL:
                return getGcjsDeclareDetail();
            case FORM_GCJS_PROJECT_DETAIL:
                return getGcjsProjectDetail();
            case FORM_DECLARE_MAIN:
                return getDeclareMain();
            case FORM_GCJS_PWPF_ADD:
                return getGcjsAddPwpf();
            case FORM_GCJS_ZJZZ_ADD:
                return getGcjsAddZjzz();
            case FORM_GCJS_QTJGW_ADD:
                return getGcjsOtherResultGoods();
            case FORM_GCJS_CLBZ:
                return getGcjsClbz();
            case FORM_GCJS_SBXX:
                return getGcjsSbxx();
            case FORM_GCJS_DETAIL_CLBZ:
                return getGcjsDetailClbz();
            case FORM_GCJS_TSCX_DETAIL:
                return getGcjsTscxDetail();
            case FORM_GCJS_MATERIAL_DETAIL:
                return getGcjsMaterialDetail();
            case FORM_GCJS_RESULT_GOODS_MATERIAL_DETAIL:
                return getResultGoodsMaterialDetails();
            case FORM_GCJS_PUBLIC_SINGLE_UPLOAD_EVENT:
                return getGcjsPublicUploadEvent();
            case FORM_GCJS_PUBLIC_MULTI_FIRST_UPLOAD_EVENT:
                return getGcjsPublicMultiUploadEvent();
            case FORM_GCJS_PUBLIC_NEW_PROJECT:
                return getGcjsPublicNewProject();
            case FORM_GCJS_PUBLIC_MULTI_SECOND_UPLOAD_EVENT:
                return getGcjsPublicMultiSecondUploadEvent();
            case FORM_DRAINAGE_FACILITY_PIPE:
                return getDrainageFacilityPipe();
            case FORM_DRAINAGE_FACILITY_YJ:
                return getDrainageFacilityYj();
            case FORM_DRAINAGE_FACILITY_SZ:
                return getDrainageFacilitySz();
            case FORM_DRAINAGE_FACILITY_PFK:
                return getDrainageFacilityPfk();
            case FORM_DRAINAGE_FACILITY_BZ:
                return getDrainageFacilityBz();
            case FORM_DRAINAGE_FACILITY_YSK:
                return getDrainageFacilityYsk();
            case FORM_DRAINAGE_FACILITY_PM:
                return getDrainageFacilityPm();
            case FORM_DRAINAGE_FACILITY_WSC:
                return getDrainageFacilityWsc();
            case FORM_QUALITY_COMPLAIN:
                return getQualityComplain();
            case FORM_RIVER_UPLOAD:
                return getRiverUpload();
            case FORM_PSH_PROBLEM_UPLOAD:
                return getPSHProblemUpload();
            case DEAL_PROBLEM:
                return getDealProblem();
            case FORM_GCJS_TRANSFER:
                return getGcjsTransfer();
            case FORM_ACCEPT_RECEIPT:
                return getAcceptReceipt();
            case FORM_NOT_ACCEPT_RECEIPT:
                return getNotAcceptReceipt();
            case FORM_APPROVE_THROUGH:
                return getApproveThrough();
            case FORM_APPROVE_NOT_THROUGH:
                return getApproveNotThrough();
            case FORM_CORRECTION_RECEIPT:
                return getCorrectionReceipt();
            default:
                return null;
        }
    }

    private FormInfo getAcceptReceipt(){
        return new FormBuilder(FORM_ACCEPT_RECEIPT)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("文书编号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申报流水号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请单位名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("统一社会信用代码/营业执照注册号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请项目名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("统一项目代码")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("单位联系电话")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("单位通讯地址")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("法定代表人姓名")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("法定代表人证件号码")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("受委托人/联系人姓名")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("受委托人/联系人证件号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系电话")
                                .isEnable(false)
                                .build())
                        .build())
                .addDivider("材料清单")//todo
                .addElement(new ElementBuilder("user")//请与申请之日起__个工作日...
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取结果时限(工作日)")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .build();
    }
    private FormInfo getNotAcceptReceipt(){
        return new FormBuilder(FORM_NOT_ACCEPT_RECEIPT)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("转发至")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }
    private FormInfo getApproveThrough(){
        return new FormBuilder(FORM_APPROVE_THROUGH)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("转发至")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }
    private FormInfo getApproveNotThrough(){
        return new FormBuilder(FORM_APPROVE_NOT_THROUGH)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("转发至")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }
    private FormInfo getCorrectionReceipt(){
        return new FormBuilder(FORM_CORRECTION_RECEIPT)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("转发至")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }

    //转办界面
    private FormInfo getGcjsTransfer() {
        return new FormBuilder(FORM_GCJS_TRANSFER)
                .addElement(new ElementBuilder("user")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("转发至")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("button")
                        .widget(new WidgetBuilder(FORM_BUTTON)
                                .title("")
                                .defaultValue("选择转发人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("comment")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("意见")
                                .isRequired(true)
                                .build())
                        .build())
                .build();
    }


    //特殊程序详情
    private FormInfo getGcjsTscxDetail() {
        return new FormBuilder("")
                .addDivider("特殊程序发起")
                .addElement(new ElementBuilder("specialType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("种类")
                                .dictTypeCode("SPECIAL_TYPE")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("chargeOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("发起单位")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("creater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("发起人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialDueDays")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请时限(工作日)")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("开始时间")
                                .isRequired(true)
                                .formatValue("yyyy-MM-dd")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialDueTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("结束时间")
                                .isRequired(true)
                                .formatValue("yyyy-MM-dd")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialReason")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("申请内容")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialMemo")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("申请理由或法律依据")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialStartMatList")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("相关附件")
                                .build())
                        .build())

                .addDivider("特殊程序结束")
                .addElement(new ElementBuilder("specialResult")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("特殊程序结束结果")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("opsUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("经办人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("opsTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("经办时间")
                                .isRequired(true)
                                .formatValue("yyyy-MM-dd")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("money")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收费金额")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("specialEndMatList")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("相关附件")
                                .build())
                        .build())
                .build();
    }

    //材料补正详情
    private FormInfo getGcjsDetailClbz() {
        return new FormBuilder("")
                .addDivider("基本信息")
                .addElement(new ElementBuilder("applyinstCode1")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请流水号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("applyinstCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目/工程编号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projInfoName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目/工程名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("owner")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("业主单位")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkman")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanPhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系电话")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("iteminstName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事项名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("approveOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实施主体")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("补正发起日期")
                                .isRequired(true)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .defaultValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctDueTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("补正截止日期")
                                .isRequired(true)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .defaultValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctDueDays")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("办结时限(工作日)")
                                .isEnable(false)
                                .build())
                        .build())

                .addDivider("经办信息")
                .addElement(new ElementBuilder("createrName1")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("补正发起人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createrName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("经办人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("opsTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("经办日期")
                                .isRequired(true)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .defaultValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("补正结束人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctEndTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("补正结束日期")
                                .isRequired(true)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .defaultValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("printUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("打印人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("printTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("打印日期")
                                .isRequired(true)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .defaultValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctDesc")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("补正意见")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getGcjsMaterialDetail() {
        return new FormBuilder("")
                .addElement(new ElementBuilder("matName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("材料名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("paperCount")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("纸质原件")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("copyCount")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("复印件")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attIsRequire")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("材料属性")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("files")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("电子件")
                                .build())
                        .build())
                .build();
    }

    private FormInfo getResultGoodsMaterialDetails(){//结果物补充材料
        return new FormBuilder("")
                .addElement(new ElementBuilder("materialName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事项名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("files")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("电子件")
                                .build())
                        .build())
                .build();
    }


    //材料补正
    private FormInfo getGcjsClbz() {
        return new FormBuilder("")
                .addElement(new ElementBuilder("applyinstCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申报流水号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projInfoName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目/工程名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目编号")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("owner")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("客户名称")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctDueDays")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("补正时限")
                                .hint("请填写工作日")
                                .isRequired(true)
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("correctMemo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("备注")
                                .hint("填写备注")
                                .build())
                        .build())

                .build();
    }


    private FormInfo getSendToNextLink() {
        return new FormBuilder("FORM_SEND_TO_NEXTLINK")
                .title("办理")
                .addElement(new ElementBuilder("bljg")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("办理结果")
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getHandle())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bljgsc")//审查决定的办理结果
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("办理结果")
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getHandle1())
                                .maxLimit(1)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bljgxs")//形式审查和任务分派的办理结果
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("办理结果")
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getHandle2())
                                .maxLimit(1)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("assignee")
                        .widget(new WidgetBuilder(RADIO_CHECKBOX)
                                .title("下一环节处理人")
//                                .maxLimit(1)
                                .defaultSelection(0)
                                .columnCount(1)
                                .isVisible(false)
                                .allowCancelCheck(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .maxLimit(9)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("opinion")
                        .widget(new WidgetBuilder(EDITFIELD_VOICE)
                                .title("办理意见")
                                .hint("请输入办理意见")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("schz")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("回执信息")
                                .isRequired(true)
                                .hint("回执未生成，请点击")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("org")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("下一环节")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .maxLimit(1)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getNewSendToNextLink() {
        return new FormBuilder("")
                .title("发送到下一环节")
                .addElement(new ElementBuilder("org")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("下一环节")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .maxLimit(9)
                                .build())
                        .build())
                .addElement(new ElementBuilder("content")
                        .widget(new WidgetBuilder(EDITFIELD_VOICE)
                                .title("办理意见")
                                .hint("请输入办理意见")
                                .build())
                        .build())
                .build();
    }
    private FormInfo getResultGoodsMaterial() {
        return new FormBuilder("FORM_RESULT_GOODS_MATERIAL")
                .addElement(new ElementBuilder("iteminstName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事项")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jgwly")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("结果物来源")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dzj")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("电子件")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("sx")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事项")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jgwly")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("结果物来源")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dzj")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("电子件")
                                .isRequired(true)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getAddReport() {
        FormInfo formInfo = new FormBuilder(FORM_ADD_REPORT)
                .addElement(new ElementBuilder("reportName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("报告名：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("districtYaId")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("行政区：")
                                .dictArray(DictUtil.getArea())
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("rescuePeopleNumber")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("救援人员：")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("rescueCarNumber")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("救援车队：")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("reportCreateTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .defaultValue(System.currentTimeMillis() + "")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reportCreater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("报告人：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reportContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("报告内容：")
                                .hint("请输入")
                                .maxLimit(500)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注：")
                                .maxLimit(100)
//                                .isRequired(true)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getAddStoreInfo() {
        FormInfo formInfo = new FormBuilder(FORM_ADD_STORE)
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("物资名称：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("code")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("物资编号：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("model")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("物资型号：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("权属单位：")
                                .dictArray(DictUtil.getArea())
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .isRequired(true)
                                .build())
                        .build())
//                .addElement(new ElementBuilder("warehouseId")
//                        .widget(new WidgetBuilder(AW_PROBLEM_SELECTION_KIT)
//                                .title("存放地址：")
//                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_select_facility_problem))
//                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
//                                .addProperty(PROPERTY_ZOOM_SCALE, "1143.0983973970322")
//                                .build())
//                        .build())

                .addElement(new ElementBuilder("warehouseId")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("存放地址：")
                                .autoLocate(false)
                                .isRequired(true)
                                .isShowMap(false)
                                .addProperty(PROPERTY_MAP_JUMP_ACTIVITY, "com.augurit.agmobile.agwater5.sewage.problem.NWFacilitySelectWidgetActivity")
                                .build())
                        .build())


                .addElement(new ElementBuilder("unit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("数量单位：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("amount")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("数量：")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())
                .build();

        return formInfo;
    }


    private FormInfo getReportOneFormInfo() {
        FormInfo formInfo = new FormBuilder(FORM_PSH_UPLOAD)
                .addElement(new ElementBuilder("reportName")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("报告名称：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reportCreater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("报告单位：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reportCreateTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("报告时间：")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reportContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("报告内容：")
                                .minLimit(0)
                                .maxLimit(500)
                                .isRequired(true)
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getReportTwoFormInfo() {
        FormInfo formInfo = new FormBuilder(FORM_PSH_UPLOAD)
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("汇景路口")
                                .defaultValue("救援队伍：排XX险队: 40人陶X小队: 50人刘XX小队: 50人杜XX小队: 50人\n救援物资：橡皮艇: 2艘发电机: 1台水泵: 1台冲锋舟: 1艘测试: 11台救生衣: 20件配电箱: 1块潜水排污泵: 2台挂机: 1台\n问题上报列表:无")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road1")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("怡馨花园")
                                .defaultValue("救援队伍：排XX险队: 40人陶X小队: 50人刘XX小队: 50人杜XX小队: 50人\n救援物资：配电箱: 2块\n问题上报列表:无")
                                .build())
                        .build())

                .addElement(new ElementBuilder("road2")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("汇桥南")
                                .defaultValue("救援队伍：救援队伍：刘XX小队: 50人\n救援物资：救生衣: 20件\n问题上报列表:无")
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getFeedbackUpload() {
        FormInfo formInfo = new FormBuilder(FORM_FEEDBACK_UPLOAD)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .isRequired(true)
                                .minLimit(2)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("OLDOID")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("检查编号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审核状态")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("correctType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("校准类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施位置")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("窨井类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("雨污类别")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖材质")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("已挂牌编号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施问题")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报说明")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("业主单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("superviseOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("updateTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间")
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getFeedbackOriginal() {
        FormInfo formInfo = new FormBuilder(FORM_FEEDBACK_ORIGINAL)
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施位置")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("窨井类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("雨污类别")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖材质")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("已挂牌编号")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getFeedbackOpinion() {
        return null;
    }

    private FormInfo getPSHPatrolDetail() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("pshName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排水户名称")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("门牌号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("排水户位置")
                                .hint("选择地点")
                                .isShowMap(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("基础信息核查")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("接驳情况核查")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预处理信息核查")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("现场检测水质")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排水许可证核查")
                                .hint("请输入")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("涉嫌违法问题")
                                .dictTypeCode("A203")
                                .columnCount(3)
                                .showDictChildren(true)
                                .maxLimit(Integer.MAX_VALUE)
                                .hint("请选择")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("上报说明")
                                .hint("请输入")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("图片列表")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("writerName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("业主单位")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .build())
                        .build())
                .build();
        return formInfo;

    }

    private FormInfo getPshUploadFormInfo() {
        FormInfo formInfo = new FormBuilder(FORM_PSH_UPLOAD)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .isRequired(true)
                                .minLimit(2)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("psh_name")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .isShowMap(false)
                                .title("排水户名称")
                                .hint("选择排水户")
                                .isRequired(true)
                                .mapJumpActivity("com.augurit.agmobile.agwater5.psh.problem.view.PSHFacilitySelectWidgetActivity")
                                .mapSelectMode(MapSelectMode.FEATURE)
                                .autoLocate(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题地点")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("problem_type")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .dictArray(DictLocalConfig.getPshProblemType())
                                .title("问题类型")
                                .columnCount(3)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述:")
                                .maxLimit(200)
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getNWDetailFormInfo() {
        FormInfo formInfo = new FormBuilder(FORM_NW_ADD_DETAIL)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .hint("请至少添加一张远景和一张近景图片")
                                .minLimit(2)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .isShowMap(false)
                                .title("设施位置:")
                                .isRequired(true)
                                .zoomScale(32000)
                                .locationManager(LocationManagerType.BAIDU)
                                .locationTransformer(new BaiduLocationTransform())
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentArea")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在区:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentTown")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在镇/街:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentVillage")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在行政村:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("collectType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施类型:")
                                .isRequired(true)
                                .build())
                        .build())
                //井
                .addElement(new ElementBuilder("yjAttrOne")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井特征:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrTwo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("雨污类别:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrThree")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖材质:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("接入对象:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("已挂牌编号:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井分类:")
                                .isRequired(true)
                                .build())
                        .build())
                //设施点
                .addElement(new ElementBuilder("cmbNumber")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施编号:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施名称:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbDesWater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计处理水量(吨/天):")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbTreatProce")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理工艺:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbRunTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("投入运行时间:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStandard")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计出水标准:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStreetPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("镇/街责任人:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStreetPeoplePhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("镇/街责任人电话:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbVillPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("村委责任人:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbVillPeoplePhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("村委责任人电话:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnitPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("维管单位责任人:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnitPhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("维管单位责任人电话:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbCovArea")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("占地面积:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbIsDyn")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("有无动力:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state2")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态:")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("add_facility")
                        .widget(new WidgetBuilder(FORM_BUTTON)
                                .title("添加附属设施:")
                                .hint("添加")
                                .setTag("type")
//                                .jumpActivity(new JumpItem(AddFacilityActivity.class))
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("区级单位:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("directOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报单位:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("markTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报说明:")
                                .isRequired(true)
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getFacilityForm() {
        FormInfo formInfo = new FormBuilder(FORM_ADD_FACILITY)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("设施照片")
                                .hint("请至少添加一张远景和一张近景图片")
                                .minLimit(1)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("名称及规格:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("type")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getAddFacilityType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getSewageAddNewData(String formCode) {
        FormInfo formInfo = new FormBuilder(formCode)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .hint("请至少添加一张远景和一张近景图片")
                                .minLimit(4)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("设施位置:")
                                .isRequired(true)
                                .zoomScale(32000)
                                .isShowMap(false)
                                .autoLocate(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentArea")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在区:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentTown")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在镇/街:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("currentVillage")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在行政村:")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("collectType")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("设施类型:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .dictArray(DictLocalConfig.getSewageAddNewFacilityType())
                                .defaultSelection(0)
                                .build())
                        .build())
                //井
                .addElement(new ElementBuilder("yjAttrOne")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("井特征:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getWellFeature())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrTwo")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("雨污类别:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getRainType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrThree")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("井盖材质:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getCoverMaterial())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施状态:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getSewageFacilityState())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnit")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("接入对象:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getSewageAccessObj())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjAttrFive")
                        .widget(new WidgetBuilder(CHECKBOX_SPINNER)
                                .title("已挂牌编号:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .returnDictCode(false)
                                .dictArray(DictLocalConfig.getSewageCardCode())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jyType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("井分类:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getSewageWellClassify())
                                .maxLimit(1)
                                .build())
                        .build())
                //设施点
                .addElement(new ElementBuilder("cmbNumber")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施编号:")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施名称:")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbDesWater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计处理水量(吨/天):")
                                .isRequired(true)
                                .textInputType("number")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbTreatProce")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("处理工艺:")
                                .isRequired(true)
                                .isVisible(false)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getProcessCraft())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbRunTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("投入运行时间:")
                                .formatValue("yyyy-MM-dd HH:mm:ss")
                                .formatDisplay("yyyy-MM-dd HH:mm")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStandard")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设计出水标准:")
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .isVisible(false)
                                .dictArray(DictLocalConfig.getOutWaterStandard())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStreetPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("镇/街责任人:")
                                .isRequired(true)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbStreetPeoplePhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("镇/街责任人电话:")
                                .textInputType("number")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbVillPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("村委责任人:")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbVillPeoplePhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("村委责任人电话:")
                                .textInputType("number")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnitPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("维管单位责任人:")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbMaUnitPhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("维管单位责任人电话:")
                                .textInputType("number")
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbCovArea")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("占地面积:")
                                .isVisible(false)
                                .textInputType("number")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cmbIsDyn")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("有无动力:")
                                .isVisible(false)
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getPowertype())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state2")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施状态:")
                                .isVisible(false)
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .defaultSelection(0)
                                .dictArray(DictLocalConfig.getFacilityState())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("add_facility")
                        .widget(new WidgetBuilder(FORM_BUTTON)
                                .title("添加附属设施:")
                                .isVisible(false)
                                .hint("添加")
                                .setTag("type")
//                                .jumpActivity(new JumpItem(AddFacilityActivity.class))
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("上报说明:")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPersonOrg")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人部门:")
                                .isRequired(true)
                                .build())
                        .build())
                .build();
        return formInfo;
    }


    private FormInfo getUploadDoorNoDetail() {
        FormInfo formInfo = new FormBuilder(FORM_MY_DOOR_NO_UPLOAD)
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())

                .addElement(new ElementBuilder("ssxzqh")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_administrative_region))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())

                .addElement(new ElementBuilder("ssxzjd")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_town))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sssqcjwh")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_village))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("ssjlx")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_street_road_alley))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sGuid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("objectId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mpdzmc")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_door_number))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .build();
        return formInfo;

    }


    /**
     * 排水户我上报的接驳井信息
     *
     * @return
     */
    private FormInfo getUploadWellDetail() {
        FormInfo formInfo = new FormBuilder(FORM_MY_WELL_UPLOAD)
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("componentType")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_yjlx")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())

                .addElement(new ElementBuilder("add")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())

                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_road))
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("attrOne")
                //                        .widget(new WidgetBuilder(EDITTEXT)
                //                                .addProperty(PROPERTY_TITLE, "窨井类型")
                //                                .build())
                //                        .build())

                .addElement(new ElementBuilder("layerName")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_inlet))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_ALLOW_CANCEL_CHECK, "0")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("attrTwo")
                //                        .widget(new WidgetBuilder(CHECKBOX)
                //                                .addProperty(PROPERTY_TITLE, "雨污类别")
                //                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                //                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                //                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                //                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                //                                .build())
                //                        .build())
                // 设施类型雨水口特有
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_feature))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_tz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("stype")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_form))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_xs")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型排放口特有
                .addElement(new ElementBuilder("direction")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("YWLB")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()

                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_material))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())

                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_ownership_units))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())


                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_list_number))
                                .build())
                        .build())


                .addElement(new ElementBuilder("cityVillage")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manage_state))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_glzt")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()

                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_problem))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_sswt")
                                .addProperty(PROPERTY_SHOW_DICT_CHILDREN, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPersonId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .build())
                        .build())
                .addElement(new ElementBuilder("markTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .build())
                        .build())

                .build();
        return formInfo;
    }

    /**
     * 从Assets中读取json
     *
     * @param fileName
     * @return FormInfo
     */
    private FormInfo readFromAssets(String fileName) {
        String s = FileUtils.readAssetsFile(mContext, fileName);
        Gson gson = new Gson();
        FormInfo formInfo = gson.fromJson(s, FormInfo.class);
        return formInfo;
    }

    public static FormInfo getRepairDataNewAdd(List<ElementInfo> elementInfos, String facilityName, Context mContext) {
        String defaultSelect = "0";
        if (facilityName.equals("窨井")) {
            defaultSelect = "0";
        } else {
            defaultSelect = "1";
        }
        FormBuilder formBuilder = new FormBuilder(FORM_DRAINAGE_REPAIR);
        formBuilder.addElement(new ElementBuilder("checkState")
                .widget(new WidgetBuilder(EDITTEXT)
                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                        .build())
                .build())
                .addDivider()
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_MIN_LIMIT, "3")
                                .isRequired(true)
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_add_photo3))
                                .build())
                        .build())
                .addDivider();

        formBuilder.addElement(new ElementBuilder("componentType")
                .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                        .addProperty(PROPERTY_DICT_TYPE_CODE, "dir_repair_type")
                        .addProperty(PROPERTY_MAX_LIMIT, "1")
                        .addProperty(PROPERTY_ALLOW_CANCEL_CHECK, "0")
                        .addProperty(PROPERTY_DEFAULT_SELECTION, defaultSelect)
                        .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                        .build())
                .build());

        for (ElementInfo elementInfo : elementInfos) {

            //行政区域
            if (elementInfo.getCode().equals("DISTRICT")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dir_repair_form_area")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            //所在污水系统
            if (elementInfo.getCode().equals("SEWAGESYST")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dir_repair_szwsxt")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            //所在雨水系统
            if (elementInfo.getCode().equals("RAINESYSTE")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dir_repair_szysxt")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            //类别
            if (elementInfo.getCode().equals("SORT")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            if (facilityName.equals("窨井")) {
                if (elementInfo.getCode().equals("SUBTYPE")) {
                    formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                            .widget(new WidgetBuilder(CHECKBOX)
                                    .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                    .addProperty(PROPERTY_IS_VISIBLE, "1")
                                    .addProperty(PROPERTY_MAX_LIMIT, "1")
                                    .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                    .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_yjlx")
                                    .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                    .build())
                            .build());
                    continue;
                }
            } else {
                if (elementInfo.getCode().equals("SUBTYPE")) {
                    formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                            .widget(new WidgetBuilder(EDITTEXT)
                                    .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                    .addProperty(PROPERTY_IS_VISIBLE, "1")
                                    .build())
                            .build());
                    continue;
                }
            }
            //井盖材质
            if (elementInfo.getCode().equals("COVER_MATE")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            //井室材质
            if (elementInfo.getCode().equals("MATERIAL")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            //设施状态
            if (elementInfo.getCode().equals("STATE")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dir_repair_sszt")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            if (elementInfo.getCode().equals("FEATURE")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_tz")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            if (elementInfo.getCode().equals("STYLE")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_xs")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }
            if (elementInfo.getCode().equals("ADDR")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_AUTO_LOCATE, "0")
                                .build())
                        .build());
                continue;
            }

            if (elementInfo.getCode().equals("OWNERDEPT")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }


            if (elementInfo.getCode().equals("MANAGEDEPT")) {
                formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, elementInfo.getName())
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build());
                continue;
            }


            String widgetType = EDITTEXT;
            if (elementInfo.getType() == Field.esriFieldTypeDate) {
                widgetType = TIMEPICKER;
            }
            if (elementInfo.getCode().equals("REMARK")) {
                widgetType = EDITFIELD;
            }
            formBuilder.addElement(new ElementBuilder(elementInfo.getCode())
                    .widget(new WidgetBuilder(widgetType)
                            .addProperty(PROPERTY_TITLE, elementInfo.getName())
                            .addProperty(PROPERTY_IS_VISIBLE, "1")
                            .build())
                    .build());
        }
        return formBuilder.build();
    }

    private FormInfo getAddDoorNo() {
        FormInfo formInfo = new FormBuilder(FORM_EMERGENCY_PROBLEM)
                .addElement(new ElementBuilder("ssxzqh")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_administrative_region))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("ssxzjd")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_town))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sssqcjwh")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_village))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("ssjlx")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_street_road_alley))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mpdzmc")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_door_number))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .build())
                        .build())

                .addElement(new ElementBuilder("objectId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_street_road_alley))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .isVisible(false)
                                .build())
                        .build())

                .addElement(new ElementBuilder("sGuid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_street_road_alley))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())

                .build();
        return formInfo;

    }

    private FormInfo getFormEmergencyProblem() {
        //        List<DictItem> dictItems = new ArrayList<>();
        //        DictItem dictItem = new DictItem();
        //        dictItem.setLabel("头部");
        //        dictItem.setId(UUID.randomUUID().toString());
        //        dictItem.setValue("-1");
        //        dictItems.add(dictItem);
        FormInfo formInfo = new FormBuilder(FORM_EMERGENCY_PROBLEM)
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("problemName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_name))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemDescription")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_des))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemStatus")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_do_or_not))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("jsdArea")
                //                        .widget(new WidgetBuilder(CHECKBOX)
                //                                .addProperty(PROPERTY_TITLE, "积水点地区")
                //                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                //                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                //                                .addProperty(PROPERTY_MAX_LIMIT,"1")
                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_worker_statistics_area")
                ////                                .addProperty(PROPERTY_HEAD_DICT_ARR,new Gson().toJson(dictItems))
                //                                .build())
                //                        .build())
                .addElement(new ElementBuilder("jsdName")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_acc_name))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_emergency_flood_area")
                                .addProperty(PROPERTY_LIST_DATA_URL, DispatchConstant.GET_JSNAME)
                                .addProperty(PROPERTY_DATA_CLASS_NAME, "JsNameBean")
                                .build())
                        .build())
                .addElement(new ElementBuilder("jsdDeep")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_acc_depth))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                //                                .addProperty(PROPERTY_REGEX,"^[+-]?([0-9]*\\.?[0-9]+|[0-9]+\\.?[0-9]*)([eE][+-]?[0-9]+)?$")//匹配整数与浮点数
                                .addProperty(PROPERTY_TEXT_INPUT_TYPE, "numberDecimal")//只能输入数字和带小数点的数字
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .build())
                        .build()).build();
        return formInfo;
    }

    private FormInfo getHandleEventDetail() {
        FormInfo formInfo = new FormBuilder(FORM_EVENT_DETAIL)
                .addElement(new ElementBuilder("area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "上报人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "上报单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .addProperty(PROPERTY_TITLE, "上报时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("water_depth")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "问题地点")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("traffic")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "设施类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("actions")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "问题类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("emery")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "紧急程度")
                                .build())
                        .build())
                .addElement(new ElementBuilder("finish_time")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "预计完成时间")
                                .build())
                        .build())

                .addElement(new ElementBuilder("detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, "问题描述")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo1")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;


    }

    private FormInfo getHandleEventDetailNW() {
        FormInfo formInfo = new FormBuilder(FORM_EVENT_DETAIL)
                .addElement(new ElementBuilder("area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "上报人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "上报单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .addProperty(PROPERTY_TITLE, "上报时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("water_depth")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "设施点")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("SZWZ")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题地点")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("JDMC")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szq")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在区")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szz")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在镇(街)")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szc")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在行政村")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("traffic")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "设施类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("actions")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "问题类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("emery")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "紧急程度")
                                .build())
                        .build())
                .addElement(new ElementBuilder("finish_time")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "预计完成时间")
                                .build())
                        .build())

                .addElement(new ElementBuilder("detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, "问题描述")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo1")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;


    }

    private FormInfo getHandleEventDetail12345() {
        FormInfo formInfo = new FormBuilder(FORM_EVENT_DETAIL)
                .addElement(new ElementBuilder("photo1")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemno")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "问题编号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("uploadPersonName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "上报人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("uploadPersonTel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "联系电话")
                                .build())
                        .build())
                .addElement(new ElementBuilder("roadname")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "所在路段")
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(MAP_BAIDU)
                                .addProperty(PROPERTY_TITLE, "具体地址")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("bigtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "设施类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("childtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "问题类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("smalltype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "破损设施")
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "推荐管养所")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, "描述信息")
                                .build())
                        .build())
                .addElement(new ElementBuilder("length")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "破损长度")
                                .build())
                        .build())
                .addElement(new ElementBuilder("width")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "破损宽度")
                                .build())
                        .build())
                .addElement(new ElementBuilder("square")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "破损量")
                                .build())
                        .build())
                .addElement(new ElementBuilder("deadline")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "截止日期")
                                .build())
                        .build())
                .addElement(new ElementBuilder("jiezhitianshu")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "截止天数")
                                .build())
                        .build())
                .addElement(new ElementBuilder("jiezhishishu")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "截止时数")
                                .build())
                        .build())
                .addElement(new ElementBuilder("completedtime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "办结时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo2")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "围挡＋反馈电话纪录")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo3")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "施工照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo4")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "竣工照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo5")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "人员照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .isVisible(false)
                                .build())
                        .build())
                .build();
        return formInfo;


    }


    protected FormInfo getFromEventDetail() {
        FormInfo formInfo = new FormBuilder(FORM_EVENT_DETAIL)
                .addElement(new ElementBuilder("area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_unit))
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .build())
                        .build())
                .addElement(new ElementBuilder("water_depth")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_position))
                                .build())
                        .build())
                .addElement(new ElementBuilder("traffic")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                .build())
                        .build())
                .addElement(new ElementBuilder("actions")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_type))
                                .build())
                        .build())
                .addElement(new ElementBuilder("emery")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emergency_degree))
                                .build())
                        .build())
                .addElement(new ElementBuilder("detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_des))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photo1")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水问题上报
     *
     * @return
     */
    protected FormInfo getFormDrainageProblem() {
        FormInfo formInfo = new FormBuilder(FORM_DRAINAGE_PROBLEM)
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .addElement(new ElementBuilder("map_location")
                        .widget(new WidgetBuilder(AW_PROBLEM_SELECTION_KIT)
                                .addProperty(PROPERTY_TITLE, "问题地点")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_select_facility_problem))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .addProperty(PROPERTY_ZOOM_SCALE, "1143.0983973970322")
                                .build())
                        .addChildElement(new ElementBuilder("SZWZ")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_position))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_position_fill))
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("JDMC")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_road))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_road_fill))
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("SSLX")
                                .widget(new WidgetBuilder(CHECKBOX)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_MAX_LIMIT, "1")
                                        .addProperty(PROPERTY_DICT_TYPE_CODE, "dri-problem")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("BHLX")
                                .widget(new WidgetBuilder(CHECKBOX)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_type))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        //                                        .addProperty(PROPERTY_DICT_TYPE_CODE, "test_problem_problem_type")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("X")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("Y")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reportx")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人X坐标")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reporty")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人Y坐标")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reportaddr")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人地址")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reporttime")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("JJCD")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emergency_degree))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_problem_urgent_type")
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjwcsj")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("预计处理完成时间")
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .isVisible(false)
                                .defaultValue("")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sfjb")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否上报")
                                .hint("请输入")
                                .defaultValue("0")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTMS")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_des))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_des_fill))
                                .build())
                        .build())
                .addElement(new ElementBuilder("isbyself")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_do_by_oneself))
                                .addProperty(PROPERTY_IS_REQUIRED, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("_self_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("self_process_detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_do_description))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_do_description_fill))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 新排水问题上报
     *
     * @return
     */
    protected FormInfo getFormDrainageProblem1() {
        FormInfo formInfo = new FormBuilder(FORM_DRAINAGE_PROBLEM)
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .addElement(new ElementBuilder("map_location")
                        .widget(new WidgetBuilder(AW_PROBLEM_SELECTION_KIT)
                                .addProperty(PROPERTY_TITLE, "问题地点")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_select_facility_problem))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .addProperty(PROPERTY_ZOOM_SCALE, "1143.0983973970322")
                                .build())
                        .addChildElement(new ElementBuilder("SZWZ")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_position))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_position_fill))
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("JDMC")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_road))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_road_fill))
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("SSLX")
                                .widget(new WidgetBuilder(SPINNER)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_MAX_LIMIT, "1")
                                        .addProperty(PROPERTY_DICT_TYPE_CODE, "dri-problem")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("BHLX")
                                .widget(new WidgetBuilder(CHECKBOX)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_type))
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        //                                        .addProperty(PROPERTY_DICT_TYPE_CODE, "test_problem_problem_type")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("X")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("Y")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reportx")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人X坐标")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reporty")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人Y坐标")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reportaddr")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "上报人地址")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reporttime")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("JJCD")
                        .widget(new WidgetBuilder(SPINNER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emergency_degree))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_problem_urgent_type")
                                .build())
                        .build())
                .addElement(new ElementBuilder("yjwcsj")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("预计处理完成时间")
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .isVisible(false)
                                .defaultValue("")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sfjb")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否上报")
                                .hint("请输入")
                                .defaultValue("0")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTMS")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_problem_des))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_problem_des_fill))
                                .build())
                        .build())
                .addElement(new ElementBuilder("isbyself")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_do_by_oneself))
                                .addProperty(PROPERTY_IS_REQUIRED, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("_self_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("self_process_detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_do_description))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_do_description_fill))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水数据新增
     *
     * @return
     */
    protected FormInfo getFormDrainageUploadNewData() {
        FormInfo formInfo = new FormBuilder(FORM_DRAINAGE_UPLOAD_NEW)
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_MIN_LIMIT, "3")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_add_photo3))
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .addProperty(PROPERTY_AUTO_LOCATE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_road))
                                .build())
                        .build())
                .addDivider()
                // ----------------------
                .addElement(new ElementBuilder("componentType")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_ALLOW_CANCEL_CHECK, "0")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型窨井特有
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_inlet))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_yjlx")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_material))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_list_number))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                // 设施类型雨水口特有
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_feature))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_tz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("stype")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_form))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_xs")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型排放口特有
                .addElement(new ElementBuilder("direction")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("YWLB")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_ownership_units))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cityVillage")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manage_state))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_glzt")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_problem))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_sswt")
                                .addProperty(PROPERTY_SHOW_DICT_CHILDREN, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
//                .addElement(new ElementBuilder("markTime")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
//                                .addProperty(PROPERTY_IS_VISIBLE, "0")
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("uploadTime")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_last_modified_time))
//                                .addProperty(PROPERTY_IS_VISIBLE, "0")
//                                .build())
//                        .build())
                .build();
        return formInfo;
    }

    /**
     * 应急调度
     *
     * @return
     */
    protected FormInfo getFormEmergencyDispatch() {
        FormInfo formInfo = new FormBuilder(FORM_EMERGENCY_DISPATCH)
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "区域")
                                .build())
                        .build())
                .addElement(new ElementBuilder("location")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "具体位置")
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .addProperty(PROPERTY_TITLE, "时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("water_depth")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "积水深度")
                                .build())
                        .build())
                .addElement(new ElementBuilder("traffic")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "交通状况")
                                .build())
                        .build())
                .addElement(new ElementBuilder("actions")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, "采取措施")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 新增校核
     *
     * @return FormInfo
     */
    protected FormInfo getCorrectOrConfirimFacility() {
        FormInfo formInfo = new FormBuilder(FORM_CORRECT_CONFIRIM_FACILITY)
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("correctType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_type))
                                .addProperty(PROPERTY_IS_VISIBLE, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_MIN_LIMIT, "3")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_add_photo3))
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("componentName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_name))
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_road))
                                .build())
                        .build())
                .addDivider()
                // ----------------------
                .addElement(new ElementBuilder("layerName")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_ALLOW_CANCEL_CHECK, "0")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型窨井特有
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_inlet))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_yjlx")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_material))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_list_number))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                // 设施类型雨水口特有
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_feature))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_tz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("stype")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_form))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_xs")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型排放口特有
                .addElement(new ElementBuilder("direction")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("YWLB")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_ownership_units))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cityVillage")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manage_state))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_glzt")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_problem))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_sswt")
                                .addProperty(PROPERTY_SHOW_DICT_CHILDREN, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("uploadTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_last_modified_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 原设施信息
     *
     * @return FormInfo
     */
    protected FormInfo getOriginFacility() {
        FormInfo formInfo = new FormBuilder(FORM_CORRECT_CONFIRIM_FACILITY)

                .addElement(new ElementBuilder("layerName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_name))
                                .build())
                        .build())
                .addElement(new ElementBuilder("originAddr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .build())
                        .build())
                .addElement(new ElementBuilder("originRoad")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_road))
                                .build())
                        .build())

                // 设施类型窨井特有
                .addElement(new ElementBuilder("originAttrOne")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_inlet))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("originAttrTwo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("originAttrThree")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_material))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())

                // 设施类型雨水口特有
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_feature))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("stype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_form))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                // 设施类型排放口特有
                .addElement(new ElementBuilder("direction")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("YWLB")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                // --------------------
                .addElement(new ElementBuilder("originAttrFour")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_ownership_units))
                                .build())
                        .build())
                .addElement(new ElementBuilder("originAttrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_list_number))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }


    /**
     * 巡检日志
     *
     * @return FormInfo
     */
    protected FormInfo getDailyPatrolUpload() {
        FormInfo formInfo = new FormBuilder(FORM_CORRECT_CONFIRIM_FACILITY)
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_MIN_LIMIT, "3")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_add_photo3))
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("componentName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_name))
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_position))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_road))
                                .build())
                        .build())
                .addDivider()
                // ----------------------
                .addElement(new ElementBuilder("layerName")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_ALLOW_CANCEL_CHECK, "0")
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型窨井特有
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_inlet))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_yjlx")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_material))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_jgcz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_list_number))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                // 设施类型雨水口特有
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_feature))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_tz")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("stype")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_form))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_xs")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                // 设施类型排放口特有
                .addElement(new ElementBuilder("direction")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("YWLB")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_rain_pollution_category))
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_ywlb")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_ownership_units))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_qsdw")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cityVillage")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manage_state))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_glzt")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                // --------------------
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_problem))
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_sjsb_sswt")
                                .addProperty(PROPERTY_SHOW_DICT_CHILDREN, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .addProperty(PROPERTY_MAX_LIMIT, "200")
                                .build())
                        .build())
                .addElement(new ElementBuilder("writerName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_person))
                                .addProperty(PROPERTY_IS_ENABLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("teamMember")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_team_member))
                                .addProperty(PROPERTY_REQUEST_KEY, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("updateTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_last_modified_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水户信息表 基本情况分表
     *
     * @return FormInfo
     */
    protected FormInfo getFormSewerageBaseInfo() {
        FormInfo formInfo = new FormBuilder(FORM_SEWERAGE_BASE_INFO)
                .addElement(new ElementBuilder("photos0")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_now_the_photo))
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .addProperty(PROPERTY_MIN_LIMIT, "2")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_drainage_name))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("town")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_own_to_town))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())

                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_door_number))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("volume")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_water_use))
                                .addProperty(PROPERTY_TEXT_INPUT_TYPE, "numberDecimal")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_detail_address))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("owner")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_name))
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerTele")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_own_tel))
                                .addProperty(PROPERTY_TEXT_INPUT_TYPE, "phone")
                                .build())
                        .build())
                .addElement(new ElementBuilder("operator")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_legal_name))
                                .build())
                        .build())
                .addElement(new ElementBuilder("operatorTele")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_legal_phone))
                                .addProperty(PROPERTY_TEXT_INPUT_TYPE, "phone")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("hasCert1")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_business_license))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "cert1Code,photos1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cert1Code")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_credit_code))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photos1")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_business_license))
                                .addProperty(PROPERTY_MAX_LIMIT, "3")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("hasCert2")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_approval_of_connection))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "photos2")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photos2")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_approval_of_connection))
                                .addProperty(PROPERTY_MAX_LIMIT, "3")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("hasCert3")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_discharge_permit))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "cert3Code,photos3")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cert3Code")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_license_code))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photos3")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_discharge_permit))
                                .addProperty(PROPERTY_MAX_LIMIT, "3")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("hasCert4")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_pollutant_discharging_license))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "cert4Code,photos4")
                                .build())
                        .build())
                .addElement(new ElementBuilder("cert4Code")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_license_code))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("photos4")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_pollutant_discharging_license))
                                .addProperty(PROPERTY_MAX_LIMIT, "3")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_instructions))
                                .build())
                        .build())


                .addElement(new ElementBuilder("area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "行政街")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("village")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "居委会")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("street")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "街路巷名称")
                                .addProperty(PROPERTY_TEXT_INPUT_TYPE, "phone")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build()).addElement(new ElementBuilder("jzwcode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "门牌号")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("jzwcode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("loginName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("directOrgId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("directOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build()).addElement(new ElementBuilder("teamOrgId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build()).addElement(new ElementBuilder("teamOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build()).addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build()).addElement(new ElementBuilder("doorplateAddressCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("houseIdFlag")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("houseId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPersonId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("markPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("y")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("x")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())


                .build();
        return formInfo;
    }


    private FormInfo getProblemHandleSubmit() {
        FormInfo formInfo = new FormBuilder(FORM_PROBLEM_UPLOAD)
                .addElement(new ElementBuilder("maintaincetype")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("维修项目")
                                .isRequired(true)
                                .defaultSelection(0)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("truesquare")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际维修量")
                                .hint("请输入实际维修量的值（单位 ）")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理意见")
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("photo2")
                //                        .widget(new WidgetBuilder(IMAGEPICKER)
                //                                .addProperty(PROPERTY_TITLE, "围挡＋反馈电话纪录")
                //                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                //                                .isVisible(false)
                //                                .build())
                //                        .build())
                //                .addElement(new ElementBuilder("photo3")
                //                        .widget(new WidgetBuilder(IMAGEPICKER)
                //                                .addProperty(PROPERTY_TITLE, "施工照片")
                //                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                //                                .isVisible(false)
                //                                .build())
                //                        .build())
                //                .addElement(new ElementBuilder("photo4")
                //                        .widget(new WidgetBuilder(IMAGEPICKER)
                //                                .addProperty(PROPERTY_TITLE, "竣工照片")
                //                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                //                                .isVisible(false)
                //                                .build())
                //                        .build())
                //                .addElement(new ElementBuilder("photo5")
                //                        .widget(new WidgetBuilder(IMAGEPICKER)
                //                                .addProperty(PROPERTY_TITLE, "人员照片")
                //                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                //                                .isVisible(false)
                //                                .build())
                //                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水户信息表 行业类别分表
     *
     * @return FormInfo
     */
    protected FormInfo getFormSewerageTypes() {
        FormInfo formInfo = new FormBuilder(FORM_SEWERAGE_TYPES)
                .addElement(new ElementBuilder("dischargerType1")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_pollutant_discharging_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_discharger_type")
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "dischargerType2")
                                //                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .dictArray(DictUtils.getDischargerType())
                                .addProperty(PROPERTY_DEFAULT_SELECTION, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("dischargerType2")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_unit_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水户信息表 接驳井分表
     *
     * @return FormInfo
     */
    protected FormInfo getFormSewerageWell() {
        FormInfo formInfo = new FormBuilder(FORM_SEWERAGE_WELL)
                .addElement(new ElementBuilder("pipeType")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_pipe_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_pipe_type")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("wellId")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_connection_manhole))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lxId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dischargeId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wellType")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_well_type")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "wellPro")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("wellPro")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_problem))
                                .addProperty(PROPERTY_IS_REQUIRED, "0")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("wellDir")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_drainage_direction")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
//                .addElement(new ElementBuilder("newDrainPro")
                .addElement(new ElementBuilder("drainPro")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_drainage_problem))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_drainage_problems")
                                .addProperty(PROPERTY_MULTICHECK_TEXT_INPUT_CODES, "1,3")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 门派 上报信息
     *
     * @return FormInfo
     */
    protected FormInfo getFormDoorNoUpDetail() {
        FormInfo formInfo = new FormBuilder(FORM_SEWERAGE_WELL)
                .addElement(new ElementBuilder("pipeType")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, "审核状态")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_pipe_type")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("wellId")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_connection_manhole))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("wellType")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_type))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_well_type")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "wellPro")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("wellPro")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_manhole_problem))
                                .addProperty(PROPERTY_IS_REQUIRED, "0")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("wellDir")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_emissions_to))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_drainage_direction")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("newDrainPro")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_drainage_problem))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_drainage_problems")
                                .addProperty(PROPERTY_MULTICHECK_TEXT_INPUT_CODES, "1,3")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水户信息表 预处理设施分表
     *
     * @return FormInfo
     */
    protected FormInfo getSewerageProcessDevice() {
        FormInfo formInfo = new FormBuilder(FORM_SEWERAGE_PROCESS_DEVICE)
                .addElement(new ElementBuilder("fac1")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_oil_separator))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "fac1Cont,fac1Main,fac1Record")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac1Cont")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_operation_state))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_device_status")
//                                .dictArray(DictUtils.getWorkState())
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac1Main")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintain_or_not))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac1Record")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintenance_record))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("fac2")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_grid))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "fac2Cont,fac2Main,fac2Record")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac2Cont")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_operation_state))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_device_status")
                                .dictArray(DictUtils.getWorkState())
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac2Main")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintain_or_not))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac2Record")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintenance_record))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("fac3")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_settling_basin))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "fac3Cont,fac3Main,fac3Record")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac3Cont")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_operation_state))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_device_status")
                                .dictArray(DictUtils.getWorkState())
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac3Main")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintain_or_not))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac3Record")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintenance_record))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("fac4_title")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_other_pretreatment_facilities))
                                .addProperty(PROPERTY_RELATIVE_ELEMENT, "fac4,fac4Cont,fac4Main,fac4Record")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac4")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_facility_name))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac4Cont")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_operation_state))
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_RETURN_DICT_CODE, "0")
                                //                                .addProperty(PROPERTY_DICT_TYPE_CODE, "dri_psh_device_status")
                                .dictArray(DictUtils.getWorkState())
                                .addProperty(PROPERTY_MAX_LIMIT, "1")
                                .addProperty(PROPERTY_MULTICHECK_ALLOW_TEXTINPUT, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac4Main")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintain_or_not))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .addElement(new ElementBuilder("fac4Record")
                        .widget(new WidgetBuilder(RADIO)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_maintenance_record))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .addProperty(PROPERTY_IS_REQUIRED, "1")
                                .build())
                        .build())
                .build();
        return formInfo;
    }


    private FormInfo getNWCheckContentDetail() {
        return new FormBuilder(FORM_NW_CHECK_CONTENT)
                .addElement(new ElementBuilder("inputDate")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("考核日期")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("assessTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("入库日期")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("入库人员")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("combName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("考核对象")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("存在问题")
                                .isEnable(false)
                                .defaultValue("污水管道破裂")
                                .build())
                        .build())
                .build();
    }


    private FormInfo getNWNewCheckContentDetail() {
        return new FormBuilder(FORM_NW_NEW_CHECK_CONTENT)
                .title("考核表内容")
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("设施名称")
                                .isEnable(false)
                                .defaultValue("设施点(102655)")
                                .isShowMap(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("assessTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("考核日期")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createPeople")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总得分数")
                                .isEnable(false)
                                .defaultValue("100")
                                .build())
                        .build())
                .addElement(new ElementBuilder("combName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("存在问题")
                                .isEnable(false)
                                .defaultValue("格栅池未设置格栅")
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("整改建议")
                                .isEnable(false)
                                .defaultValue("建议加强管理")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sign")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("考核组签名")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .build();
    }

    /**
     * 农污问题上报
     *
     * @return
     */
    protected FormInfo getNWFormProblemUpload() {
        FormInfo formInfo = new FormBuilder(FORM_DRAINAGE_PROBLEM)
                .title("问题上报")
                .addElement(new ElementBuilder("_probleam_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .isRequired(true)
                                .minLimit(3)
                                .build())
                        .build())
                .addElement(new ElementBuilder("map")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("设施点")
                                .autoLocate(false)
                                .hint("选择设施点或井")
                                .isRequired(true)
                                .isShowMap(false)
                                .addProperty(PROPERTY_MAP_JUMP_ACTIVITY, "com.augurit.agmobile.agwater5.sewage.problem.NWFacilitySelectWidgetActivity")
                                .build())
                        .build())
                .addElement(new ElementBuilder("SZWZ")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题地点")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("JDMC")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szq")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在区")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szz")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在镇(街)")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szc")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在行政村")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("SSLX")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
//                                .dictArray(DictLocalConfig.getFacility())
                                .dictTypeCode("A179")
                                .title("设施类型")
                                .relativeElements("WTLX")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTLX")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                //                                .dictArray(DictLocalConfig.getYJIsNormalDicts())
                                .title("问题类型")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("JJCD")
                        .widget(new WidgetBuilder(SPINNER)
                                .initData(DictLocalConfig.getNW_Problem_JJCD())
                                .maxLimit(1)
                                .title("紧急程度")
                                .defaultSelection(0)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTMS")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("isbyself")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("任务处理")
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .hint("请选择")
                                .dictArray(DictLocalConfig.getSolveType())
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("assignee")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("下一环节处理人")
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .isVisible(false)
                                .defaultSelection(0)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgDist")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("区级")
                                .maxLimit(1)
                                .allowCancelCheck(true)
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("distPerson")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("区级候选人")
                                .maxLimit(1)
                                .allowCancelCheck(true)
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgTown")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("镇街")
                                .maxLimit(1)
                                .allowCancelCheck(true)
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("townPerson")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("镇街候选人")
                                .maxLimit(1)
                                .allowCancelCheck(true)
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("message")
                        .widget(new WidgetBuilder(RADIO)
                                .title("发送短信通知处理人")
                                .maxLimit(1)
                                .isVisible(false)
                                .build())
                        .build())

                .addElement(new ElementBuilder("_self_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("添加处理照片")
                                .isRequired(true)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("self_process_detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理描述")
                                .isRequired(true)
                                .isVisible(false)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getNW_problem_readInfo() {
        FormInfo formInfo = new FormBuilder("NW_PROBLEM_READ_FORM")
                .title("问题来源")
                .addElement(new ElementBuilder("sbr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sbsj2")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .isRequired(true)
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")//reportaddr reportx reporty
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("问题地点")
                                .isShowMap(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sslx")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .dictTypeCode("A179")
                                .title("设施类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtlx")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .dictTypeCode("A179")
                                .showDictChildren(true)
                                .title("问题类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jjcd")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .dictTypeCode("dri_jjcd_wtsb")
                                .title("紧急程度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtms")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("files2")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场图片")
                                .minLimit(1)
                                .maxLimit(9)
                                .isRequired(true)
                                .build())
                        .build())
                .build();

        return formInfo;
    }

    private FormInfo getNW_PROBLEM_FORMInfo() {
        AwDictRepository adp = new AwDictRepository();
//        List<NWDicModel> nwdicmodel = getNWDictListByTypeCode("A179");
        //        List<NWDicModel> alldicmodel = adp.getDicItemFromLocal(NWDicModel.class);
        FormInfo formInfo = new FormBuilder("NW_PROBLEM_FORM")
                .title("农污问题上报")
                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .minLimit(1)
                                .maxLimit(9)
                                .isRequired(true)
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("SZWZ")
                //                        .widget(new WidgetBuilder(MAP_ARCGIS)
                //                                .title("问题地点")
                //                                .hint("选择设施或井")
                //                                .isShowMap(false)
                //                                .build())
                //                        .build())
                .addElement(new ElementBuilder("map_location")
                        .widget(new WidgetBuilder(AW_PROBLEM_SELECTION_NW)
                                .addProperty(PROPERTY_TITLE, "")
                                .addProperty(PROPERTY_HINT, mContext.getString(R.string.form_select_facility_problem))
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .addProperty(PROPERTY_ZOOM_SCALE, "1143.0983973970322")
                                .build())
                        .addChildElement(new ElementBuilder("SZWZ")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .title("问题地点")
                                        .hint("选择设施或井")
                                        .isRequired(true)
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("JDMC")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .title("所在道路")
                                        .hint("请输入")
                                        .isRequired(true)
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("szq")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .title("所在区")
                                        .hint("请输入")
                                        .isRequired(true)
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("szz")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .title("所在镇(街)")
                                        .hint("请输入")
                                        .isRequired(true)
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("szc")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .title("所在行政村")
                                        .hint("请输入")
                                        .isRequired(true)
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("X")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("Y")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, "Y坐标")
                                        .addProperty(PROPERTY_IS_REQUIRED, "1")
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .addChildElement(new ElementBuilder("reporttime")
                                .widget(new WidgetBuilder(EDITTEXT)
                                        .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                        .addProperty(PROPERTY_IS_VISIBLE, "0")
                                        .build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("SSLX")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型")
                                .hint("请选择")
                                .defaultSelection(0)
                                .maxLimit(1)
//                                .initData(nwdicmodel)
                                .relativeElements("WTLX")
                                .allowCancelCheck(false)
                                .allowTextInput(true)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTLX")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("问题类型")
                                .hint("其它类型")
                                .defaultSelection(0)
                                //                                .initData(alldicmodel)
                                .maxLimit(1)
                                .allowTextInput(true)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("JJCD")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("紧急程度")
                                .hint("请选择")
                                .defaultSelection(0)
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .initData(DictLocalConfig.getNW_Problem_JJCD())
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("WTMS")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .hint("请输入")
                                .maxLimit(200)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("handleType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("处理方式")
                                .hint("请选择")
                                .defaultSelection(0)
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .initData(DictLocalConfig.getNW_Problem_isbyself())
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("self_process_photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("添加处理照片")
                                .maxLimit(9)
                                .isRequired(true)
                                .isRequiredWhenInvisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("self_process_detail")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理描述")
                                .hint("请输入")
                                .maxLimit(200)
                                .isRequired(true)
                                .isRequiredWhenInvisible(false)
                                .build())
                        .build())
                //                .addElement(new ElementBuilder("assignee")
                //                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                //                                .title("下一环节处理人")
                //                                .defaultSelection(0)
                //                                .isRequired(true)
                //                                .build())
                //                        .build())
                //                .addElement(new ElementBuilder("issendmsg")
                //                        .widget(new WidgetBuilder(RADIO)
                //                                .title("发短信通知对方")
                //                                .build())
                //                        .build())
                .build();
        return formInfo;
    }

//    /**
//     * 根据typeCode获取农污字典
//     *
//     * @param typeCode
//     * @param <T>
//     * @return
//     */
//    public <T extends IDictItem> List getNWDictListByTypeCode(String typeCode) {
////        if(TextUtils.isEmpty(typeCode)) return getDicItemFromLocal(NWDicModel.class);
////        // 大多数情况获取子项对应标签即可, 效率较高
////        List<NWDicModel> allDictItems = getDicItemFromLocal(NWDicModel.class);
////        List<NWDicModel> result = new LinkedList<>();
////        for (NWDicModel dictItem : allDictItems) {
////            if (TextUtils.equals(dictItem.getType_code(),typeCode)) {
////                result.add(dictItem);
////            }
////        }
//        Realm realm = RealmSingleton.getInstance().getRealm();
//        RealmResults<NWDicModel> dictionaryItems = realm.where(NWDicModel.class).equalTo("type_code", typeCode)
//                .findAll();
//        List<NWDicModel> result = realm.copyFromRealm(dictionaryItems);
//        realm.close();
////        CommonSynDao commonSynDao = new CommonSynDao();
////        Map<String, String> params = new HashMap();
////        params.put("typeCode", typeCode);
////        List<NWDicModel> result = commonSynDao.query(NWDicModel.class, params);
//        return result;
//    }

    /**
     * 排水户问题详情
     *
     * @return
     */
    protected FormInfo getPshEvnetDetail() {
        FormInfo formInfo = new FormBuilder(FORM_PSH_EVENT_DETAIL)
                .addElement(new ElementBuilder("photo")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sbr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isRequired(true)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报单位")
                                .isEnable(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("appSbsj")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .isRequired(true)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("szwz")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("问题地点")
                                .isEnable(false)
                                .isRequired(true)
                                .isShowMap(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("pshmc")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排水户名称")
                                .isRequired(true)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtlx")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .dictTypeCode("A203")
                                .showDictChildren(true)
                                .title("问题类型")
                                .isRequired(true)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtms")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .isEnable(false)
                                .isRequired(true)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 排水户巡检日志
     *
     * @return FormInfo
     */
    protected FormInfo getPshDailyPatrolUpload() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("_rz_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .hint("至少添加2张照片")
                                .minLimit(2)
                                .maxLimit(9)
                                .build())
                        .build())
                .addDivider("排水户信息")
                .addElement(new ElementBuilder("pshName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排水户名称")
                                .hint("输入排水户名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("门牌号")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("排水户位置")
                                .hint("选择地点")
                                .zoomScale(32000)
                                .isShowMap(false)
                                .autoLocate(false)
                                .isRequired(true)
                                .mapSelectMode(MapSelectMode.READ_ONLY)
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("基础信息核查")
                                .defaultSelection(0)
                                .maxLimit(1)
                                .hint("请选择")
                                .dictTypeCode("A198")
                                .returnDictCode(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("接驳信息核查")
                                .hint("请选择")
                                .defaultSelection(0)
                                .maxLimit(1)
                                .dictTypeCode("A199")
                                .returnDictCode(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预处理设施核查")
                                .defaultSelection(0)
                                .maxLimit(1)
                                .hint("请选择")
                                .dictTypeCode("A200")
                                .returnDictCode(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("现场检测水质")
                                .defaultSelection(0)
                                .maxLimit(1)
                                .hint("请选择")
                                .dictTypeCode("A201")
                                .returnDictCode(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("排水许可证核查")
                                .defaultSelection(0)
                                .maxLimit(1)
                                .hint("请选择")
                                .dictTypeCode("A202")
                                .returnDictCode(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("涉嫌违法问题")
                                .hint("请选择")
                                .dictTypeCode("A203")
                                .returnDictCode(true)
                                .showDictChildren(true)
                                .isRequired(false)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("上报说明")
                                .hint("请输入")
                                .minLimit(0)
                                .maxLimit(200)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("loginName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("markTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("uploadTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_last_modified_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    /**
     * 养护计划
     *
     * @return
     */
    private FormInfo getMaintainAddNew() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_check_state))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("_yh_")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场照片")
                                .hint("至少添加两张照片")
                                .minLimit(2)
                                .maxLimit(9)
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("planId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("养护计划编号")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("上报人位置")
                                .hint("选择地点")
                                .isRequired(true)
                                .locationManager(LocationManagerType.BAIDU)
                                .locationTransformer(new BaiduLocationTransform())
//                                .isShowLocationText(true)
                                .autoLocate(true)
                                .isShowMap(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("wtms")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("养护情况")
                                .hint("请输入")
                                .maxLimit(200)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .hint("请输入")
                                .maxLimit(100)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("loginName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_owner_unit))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sbtime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_report_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("uploadTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, mContext.getString(R.string.form_last_modified_time))
                                .addProperty(PROPERTY_IS_VISIBLE, "0")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getWeatherAddNew() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("alarmTitle")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预警标题")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("alarmTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("预警时间")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .formatValue("")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("alarmGrade")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预警级别")
                                .maxLimit(1)
                                .initData(DictLocalConfig.getWarningLevel())
                                .hint("请选择")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("alarmType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预警指令")
                                .initData(DictLocalConfig.getWarningType())
                                .maxLimit(1)
                                .hint("请选择")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("alarmStatus")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预警状态")
                                .hint("请输入")
                                .defaultValue("0")
                                .isRequired(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("alarmChange")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预警来源")
                                .hint("请输入")
                                .isRequired(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("alarmContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("预警详细")
                                .hint("请输入")
                                .build())
                        .build())
                .build();
        return formInfo;
    }


    private FormInfo getReleaseInfo() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("fb_sc_content")
                        .widget(new WidgetBuilder(FORM_BUTTON)
                                .title("生成内容")
                                .isVisible(false)
                                .hint("生成")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTitle")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("发布标题")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("发布类型")
                                .hint("请选择")
                                .initData(DictLocalConfig.getWaterLoggerType())
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("recordContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("发布内容")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("发布时间")
                                .defaultValue(System.currentTimeMillis() + "")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("isRelease")
                        .widget(new WidgetBuilder(RADIO)
                                .title("是否发布")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getSMSAddNew() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("alarmType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("短信类型")
                                .hint("请选择")
//                                .dictTypeCode("A158")
                                .initData(DictLocalConfig.getWarningInstruct())
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receivePerContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("短信模板")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("发送内容")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sendTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("气象发布时间")
                                .formatValue("yyyy年MM月dd日HH时mm分")
                                .formatDisplay("yyyy-MM-dd HH:mm")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lastAlarm")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预警信号")
                                .hint("请输入")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("nextAlarm")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预警信号")
                                .hint("请输入")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("启动时间")
                                .formatValue("")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lastGrade")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预警等级")
                                .hint("请选择")
                                .initData(DictLocalConfig.getGrade())
                                .maxLimit(1)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("nextGrade")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预警等级")
                                .hint("请选择")
                                .initData(DictLocalConfig.getGrade())
                                .maxLimit(1)
//                                .isVisible(false)
                                .build())
                        .build())


                .addElement(new ElementBuilder("mAssigneesSelected")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .isRequired(true)
                                .isVisible(false)
                                .addProperty(PROPERTY_MAX_LIMIT, "1000000")
                                .build())
                        .build())
                .addElement(new ElementBuilder("assigneesText")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .isVisible(false)
                                .isRequired(true)
                                .build())
                        .build())


//                .addElement(new ElementBuilder("sc")
//                        .widget(new WidgetBuilder(FORM_BUTTON)
//                                .title("                      ")
//                                .hint("生成内容")
//                                .build())
//                        .build())
                .build();
        return formInfo;
    }
//    private FormInfo getSMSAddNew() {
//        FormInfo formInfo = new FormBuilder("")
//                .addElement(new ElementBuilder("alarmType")
//                        .widget(new WidgetBuilder(SPINNER)
//                                .title("短信类型")
//                                .hint("请选择")
//                                .dictTypeCode("A158")
////                                .initData(DictLocalConfig.getWarningInstruct())
//                                .maxLimit(1)
//                                .isRequired(true)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("receivePerContent")
//                        .widget(new WidgetBuilder(EDITFIELD)
//                                .title("短信模板")
//                                .hint("请输入")
//                                .isEnable(false)
//                                .isRequired(true)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("remark")
//                        .widget(new WidgetBuilder(EDITFIELD)
//                                .title("发送内容")
//                                .hint("请输入")
//                                .isEnable(false)
//                                .isRequired(true)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("sendTime")
//                        .widget(new WidgetBuilder(TIMEPICKER)
//                                .title("气象发布时间")
//                                .formatValue("yyyy年MM月dd日HH时mm分")
//                                .formatDisplay("yyyy-MM-dd HH:mm")
//                                .isVisible(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("lastAlarm")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("预警信号")
//                                .hint("请输入")
//                                .isVisible(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("nextAlarm")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("预警信号")
//                                .hint("请输入")
//                                .isVisible(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("time")
//                        .widget(new WidgetBuilder(TIMEPICKER)
//                                .title("启动时间")
//                                .formatValue("")
//                                .isVisible(false)
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("lastGrade")
//                        .widget(new WidgetBuilder(SPINNER)
//                                .title("预警等级")
//                                .hint("请选择")
//                                .initData(DictLocalConfig.getGrade())
//                                .maxLimit(1)
//                                .isVisible(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("nextGrade")
//                        .widget(new WidgetBuilder(SPINNER)
//                                .title("预警等级")
//                                .hint("请选择")
//                                .initData(DictLocalConfig.getGrade())
//                                .maxLimit(1)
//                                .isVisible(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("sc")
//                        .widget(new WidgetBuilder(FORM_BUTTON)
//                                .title("                      ")
//                                .hint("生成内容")
//                                .build())
//                        .build())
//                .build();
//        return formInfo;
//    }


    private FormInfo getSMSDetail() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("短信内容")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receivePerson")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("发送人员")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("peopleSendError")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("发送失败")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sendUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("短信创建人")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("peopleSend")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("短信来源")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getEmergencyDispose() {
        FormInfo formInfo = new FormBuilder(FORM_EMERGENCY_PROBLEM_DISPOSE)
                .addElement(new ElementBuilder("uploadImage")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("上传图片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .hint("请至少上传一张远景图片和近景图片")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveWay")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理措施")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理结果")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveRemark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理备注")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getEmergency() {
        FormInfo formInfo = new FormBuilder(FORM_EMERGENCY_PROBLEM_UPLOAD)
                .addElement(new ElementBuilder("uploadImage")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("上传图片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .hint("请至少上传一张远景图片和近景图片")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事件名称")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jsdName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("积水点")
                                .hint("请输入")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemAction")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("上报指令")
                                .hint("请选择")
                                .initData(LocalDictItemUtil.getAction())
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jsdArea")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("积水面积")
                                .hint("请输入")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("jsdDeep")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("积水深度")
                                .hint("请输入")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemDescription")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("事件描述")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemTime_str")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("solveImage")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("处理图片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .hint("请至少上传一张远景图片和近景图片")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolvePerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理人")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveTime_str")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理时间")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveWay")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理措施")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理结果")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveRemark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理备注")
                                .isVisible(false)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getReservePlanInfo() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("code")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预案编号")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("预案名称")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("level")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预案等级")
                                .initData(DictLocalConfig.getEmergencyLevel())
                                .hint("请选择")
                                .build())
                        .build())
                .addElement(new ElementBuilder("type")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("预案类型")
                                .initData(DictLocalConfig.getEmergencyType())
                                .hint("请选择")
                                .build())
                        .build())
                .addElement(new ElementBuilder("content")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("预案内容")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("sms")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("短信内容")
                                .hint("请输入")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .hint("请输入")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getResponseInfo() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("company")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("成员单位")
                                .hint("请输入")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("type")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("督办类型")
                                .initData(DictLocalConfig.getDBType())
                                .hint("请选择")
                                .defaultSelection(0)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ntype")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .initData(DictLocalConfig.getTZType())
                                .title("通知类型")
                                .hint("请选择")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("describe")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .hint("请输入")
                                .defaultValue("请启动督办")
                                .build())
                        .build())
                .addElement(new ElementBuilder("dbtx")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("督办提醒")
                                .hint("请输入")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("reply")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("回复内容")
                                .hint("请输入")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("status")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("状态")
                                .hint("请输入")
                                .defaultValue("0")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("person")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("创建人")
                                .hint("请输入")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("time")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("时间")
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getDailyPatrolDetail() {
        FormInfo formInfo = new FormBuilder("")
                .addElement(new ElementBuilder("taskName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("任务名称")
                                .build())
                        .build())
                .addElement(new ElementBuilder("assignState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("下发状态")
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("任务状态")
                                .build())
                        .build())
                .addElement(new ElementBuilder("taskPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("执行人员")
                                .build())
                        .build())
                .addElement(new ElementBuilder("assignPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("下发人员")
                                .build())
                        .build())
                .addElement(new ElementBuilder("assignTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("下发时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("dueStartDate")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("计划开始时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("dueEndDate")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("计划结束时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("taskDesc")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("任务描述")
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getHeDaoDetailForm(String getHeDaoDetailForm) {
        return new FormBuilder(getHeDaoDetailForm)
                .addElement(new ElementBuilder("上报人")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("startTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("开始时间")
                                .formatValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("endTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("结束时间")
                                .formatValue("")
                                .build())
                        .build())
                .build();
    }

    private FormInfo getHeDaoXunChaForm(String formSaveHedaoXc) {
        return new FormBuilder(formSaveHedaoXc)
                .addElement(new ElementBuilder("上报人")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "上报地址")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("trancId")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("巡检轨迹ID")
                                .formatValue("")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcghTable")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤防")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcghid")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤段")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("巡查类型")
                                .maxLimit(1)
                                .isRequired(true)
                                .dictTypeCode("RecordNature")
                                .build())
                        .build())
                .addElement(new ElementBuilder("xcItem")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("巡查内容")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("xcItemChild")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("巡查内容子项")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("运行情况")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("运行情况")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("描述信息")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("描述信息")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("现场照片")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .build();
    }

    private FormInfo getByRiverProblemUpload(String byRiverProblemUpload) {
        return new FormBuilder(byRiverProblemUpload)
                .addElement(new ElementBuilder("上报人")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .formatValue("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("堤防")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤防")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("堤段")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤段")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("项目名称")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("项目名称")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("检查性质")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查性质")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("问题类型")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("问题类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("描述信息")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("描述信息")
                                .build())
                        .build())
                .addElement(new ElementBuilder("图片")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                .build())
                        .build())
                .build();
    }

    public FormInfo getByRiverProjectUpload(String formYjfhProblem) {
        return getByRiverProjectUploadBuilder(formYjfhProblem).build();
    }

    public static FormBuilder getByRiverProjectUploadBuilder(String formYjfhProblem) {
        return new FormBuilder(formYjfhProblem)
                .addElement(new ElementBuilder("recordPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .build())
                        .build())
                .addElement(new ElementBuilder("dfName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤防")
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤段")
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("工程名称")
                                .allowCancelCheck(false)
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("巡查类型")
                                .dictTypeCode("RecordNature")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectNameLabel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程名称label")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dfNameLabel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("堤防label")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcNameLabel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("堤段label")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTypeLabel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("巡查类型label")
                                .isVisible(false)
                                .build())
                        .build())
                ;

    }


    private FormInfo getByRiverProblemDetailForm(String formYjfhProblem) {
        return new FormBuilder(formYjfhProblem)
                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .maxLimit(9)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人员")
                                .isEnable(false)
                                .isRequired(true)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在单位")
                                .isEnable(false)
                                .isRequired(true)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getOrgName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间")
                                .isEnable(false)
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("updateTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("修改时间")
                                .isVisible(false)
                                .isEnable(false)
                                .defaultValue(System.currentTimeMillis() + "")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题类型")
                                .isRequired(true)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "问题地址")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .addProperty(PROPERTY_TITLE, "所在道路")
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("dfid")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤防")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ddid")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤段")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("项目名称")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("x")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .isRequired(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("y")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .isRequired(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题状态")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审核状态")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("checkUser")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审批人")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())

                .addElement(new ElementBuilder("checkTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审批时间")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())

                .addElement(new ElementBuilder("checkDesription")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("审批描述")
                                .isEnable(false)
                                .isVisible(false)
                                .maxLimit(200)
                                .build())
                        .build())
                .build();


    }

    private FormInfo getByRiverProblemForm(String byRiverFormProblem) {
        return new FormBuilder(byRiverFormProblem)
//                .addElement(new ElementBuilder("recordType")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("问题类型")
//                                .isRequired(true)
//                                .build())
//                        .build())
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
//                                .isVisible(false)
                                .isVisible(false)
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在单位")
                                .isEnable(false)
                                .isVisible(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getOrgName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报时间")
                                .isEnable(false)
                                .isRequired(true)
                                .isVisible(false)
                                .defaultValue(TimeUtil.getStringTimeYYMMDDSS(new Date()))
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "问题地址")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dfid")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤防")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ddid")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("堤段")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("项目名称")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
//                .addElement(new ElementBuilder("检查性质")
//                        .widget(new WidgetBuilder(SPINNER)
//                                .title("检查性质")
//                                .dictTypeCode("RecordNature")
//                                .maxLimit(1)
//                                .build())
//                        .build())
                .addElement(new ElementBuilder("x")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .isRequired(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("y")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .isVisible(false)
                                .isRequired(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .maxLimit(9)
                                .isRequired(true)
                                .build())
                        .build())
                .build();


    }


    public static FormInfo getByRiverUpload() {
        return new FormBuilder(BY_RIVER_UPLOAD)
                .addElement(new ElementBuilder("upload_picture")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .addProperty(PROPERTY_TITLE, "现场照片")
                                .addProperty(PROPERTY_MAX_LIMIT, "9")
                                //.addProperty(PROPERTY_MIN_LIMIT, "3")
                                //.addProperty(PROPERTY_HINT, "请至少添加3张照片")
                                .build())
                        .build())
//                .addElement(new ElementBuilder("recordPerson")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("上报人")
//                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
//                                .build()
//                        ).build())
                .addElement(new ElementBuilder("projectName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程名称")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报类型")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在位置")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("recordResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报结果")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人机构")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("checkPerson")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审批人")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("checkState")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审批状态")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .addElement(new ElementBuilder("checkDesription")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("审批描述")
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getName())
                                .build()
                        ).build())
                .build();


    }


    private FormInfo getRiverReportDetail() {
        return new FormBuilder(RIVER_REPORT_DETAIL)
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .isShowMap(false)
                                .title("上报地址:")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dfName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("所在堤防")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ddName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("所在堤段")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题类型")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("上报人员")
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("所在单位")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("描述")
                                .maxLimit(200)
                                .build())
                        .build())
                .addElement(new ElementBuilder("resourceFiles")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场图片")
                                .maxLimit(9)
                                .minLimit(1)
                                .addProperty(PROPERTY_HINT, "请至少添加1张照片")
                                .build())
                        .build())
                .build();
    }


    public static FormBuilder getYjfhInspectFormBuilder() {
        return new FormBuilder(FORM_YJFH_INSPECT)
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .addProperty(PROPERTY_TITLE, "巡检地址")
                                .addProperty(PROPERTY_IS_SHOW_MAP, "0")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("巡检日期")
                                .isVisible(false)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("巡检单位")
                                .isVisible(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getOrgName())
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("installationType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型")
                                .dictTypeCode("FacilityType")
                                .maxLimit(1)
                                .defaultSelection(0)
                                .allowCancelCheck(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcghName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施名称")
                                .maxLimit(1)
                                .defaultSelection(0)
                                .allowCancelCheck(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("巡检人员")
                                .isVisible(false)
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
//                .addElement(new ElementBuilder("checkUser")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("监护人员")
//                                .build())
//                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .dictTypeCode("RecordNature")
                                .title("巡检类别")
                                .maxLimit(1)
                                .defaultSelection(0)
                                .allowCancelCheck(false)
                                .build())
                        .build());
    }

    //河道问题上报
    public static FormInfo getRiverReportForm() {
        FormInfo formInfo = new FormBuilder(RIVER_REPORT_FORM)
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("上报地址")
                                .zoomScale(32000)
                                .isShowMap(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dfName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("所在堤防")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ddName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("所在堤段")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("问题类型")
                                .isRequired(true)
                                .maxLimit(1)
                                .returnDictCode(false)
                                .dictTypeCode("RiverIllegalType")
                                .build())
                        .build())
                .addElement(new ElementBuilder("resourceFiles")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .title("现场图片")
                                .isRequired(true)
                                .maxLimit(9)
                                .minLimit(1)
                                .addProperty(PROPERTY_HINT, "请至少添加1张照片")
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("描述")
                                .maxLimit(200)
                                .build())
                        .build())
                .build();
        return formInfo;
    }

    private FormInfo getYjfhProblemForm(String formYjfhProblem) {
        return new FormBuilder(formYjfhProblem)
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人员")
                                .isEnable(false)
                                .isVisible(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在单位")
                                .isEnable(false)
                                .isVisible(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getOrgName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型")
                                .isRequired(true)
                                .dictTypeCode("FacilityType")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施名称")
                                .isRequired(true)
                                .defaultSelection(0)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查性质")
                                .isRequired(true)
                                .dictTypeCode("RecordNature")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wt")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查大项")
                                .isRequired(true)
                                .maxLimit(1)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtChild")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("问题项目")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题内容")
                                .isRequired(true)
                                .hint("请输入问题内容")
                                .build())
                        .build())

                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .maxLimit(9)
                                .build())
                        .build())
                .build();


    }


    private FormInfo getYjfhProblemDetailForm(String formYjfhProblem) {
        return new FormBuilder(formYjfhProblem)
                .addElement(new ElementBuilder("recordUserName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人员")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getUserName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在单位")
                                .isEnable(false)
                                .defaultValue(LoginManager.getInstance().getCurrentUser().getOrgName())
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型")
                                .isRequired(true)
                                .dictTypeCode("FacilityType")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gcName")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施名称")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("recordType")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查性质")
                                .isRequired(true)
                                .dictTypeCode("RecordNature")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wt")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查大项")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("wtChild")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("检查小项")
                                .isRequired(true)
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题内容")
                                .isRequired(true)
                                .hint("请输入检查内容")
                                .build())
                        .build())

                .addElement(new ElementBuilder("photos")
                        .widget(new WidgetBuilder(IMAGEPICKER)
                                .maxLimit(9)
                                .build())
                        .build())
                .build();


    }

    private FormInfo getGcjsDeclareDetail() {
        return new FormBuilder("")
//                .addElement(new ElementBuilder("_rz_")
//                        .widget(new WidgetBuilder(IMAGEPICKER)
//                                .title("现场照片")
//                                .hint("至少添加2张照片")
//                                .minLimit(2)
//                                .maxLimit(9)
//                                .build())
//                        .build())
//                .addDivider("排水户信息")
                .title("基本信息")
                .addElement(new ElementBuilder("pshName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目类型")
                                .hint("输入项目类型")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mph")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目代码")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目名称")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("road")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目地址")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addDivider()
                .addElement(new ElementBuilder("attrOne")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业名称")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrTwo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请单位")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrThree")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业注册号")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFour")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请人")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("attrFive")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("身份证号")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("childCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系电话")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("description")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("用地面积(㎡)")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("loginName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建筑面积(㎡)")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("parentOrgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总投资(万元)")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build()).addElement(new ElementBuilder("loginName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建筑内容")
                                .hint("请输入")
                                .isEnable(false)
                                .build())
                        .build())
                .build();
    }


    private FormInfo getGcjsProjectDetail() {//基本信息的页面申报表单(项目/工程信息)
        return new FormBuilder("")
                //.addDivider("项目/工程信息")
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目代码")
                                //.defaultValue("ZBM-P-20190326-66536115#1")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程代码")
                                //.defaultValue("ZBM-P-20190326-66536115#1")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目/工程名称")
                                .hint("输入项目名称")
                                //.defaultValue("泉城广场亮化工程")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所属主题")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("立项类型")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("审批行政区划")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设地点")//项目位置、是否高新区项目、财政出资
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("资金来源")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否外资")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("投资类型")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("土地来源")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设性质")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程分类")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否完成区域评估")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否带设计方案")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设性质")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程分类")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("applyTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("拟开工时间")
                                .formatDisplay("yyyy-MM-dd")
                                .formatValue("")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("applyTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("拟建成时间")
                                .formatDisplay("yyyy-MM-dd")
                                .formatValue("")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总投资（万元）")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建筑高度")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("跨单体高度")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建筑面积（m²）")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("用地面积（m²）")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projLevel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("重点项目")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("国标行业")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("国标行业代码发布年代")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设规模及内容")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目地址")
                                .isEnable(false)
                                .build())
                        .build())

//                .addDivider("申报主体")
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("单位类型")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("统一社会信用代码")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("单位名称")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("单位地址")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("法定代表人")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("法定代表人证件号")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("联系人名称")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("联系人证件号")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("联系人手机")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("联系人邮箱")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("工商登记号")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("组织机构代码")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("纳税人识别号")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("信用标记码")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("注册资本")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("注册登记机关")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("经营范围")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("邮政编码")
//                                .isEnable(false)
//                                .build())
//                        .build())
//                .addElement(new ElementBuilder("projectBuildUnit")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("行政区（园区）")
//                                .isEnable(false)
//                                .build())
//                        .build())

                .build();
    }

    //申报主体信息
    private FormInfo getDeclareMain(){
        return new FormBuilder("")
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("单位类型")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("统一社会信用代码")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("单位名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("单位地址")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("法定代表人")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("法定代表人证件号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系人名称")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系人证件号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系人手机")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系人邮箱")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工商登记号")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("组织机构代码")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("纳税人识别号")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("信用标记码")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("注册资本")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("注册登记机关")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("经营范围")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("邮政编码")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("projectBuildUnit")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区（园区）")
                                .isVisible(false)
                                .isEnable(false)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getGcjsOtherResultGoods() {
        return new FormBuilder("")
                .title("其他结果物")
                .addElement(new ElementBuilder("officialDocTitle")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("名称")
                                .hint("请输入名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocNo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("编号")
                                .isRequired(true)
                                .hint("请输入编号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocDueDate")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("有效期限")
                                .isRequired(true)
                                .formatDisplay("yyyy-MM-dd")
                                .formatValue("yyyy-MM-dd")
                                .hint("请选择有效期限")
                                .build())
                        .build())
                .addElement(new ElementBuilder("isLimit")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("长期有效")
                                .isRequired(false)
                                .dictArray(new DictBuilder().item("否").item("是").build())
                                .maxLimit(1)
                                .minLimit(1)
                                .defaultValue("否")
                                .build())
                        .build())

                .addElement(new ElementBuilder("memo")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("选择文件")
                                .hint("请选择文件")
                                .minLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getGcjsAddPwpf() {
        return new FormBuilder("")
                .title("新建批复")
                .addElement(new ElementBuilder("matId")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("批文类型")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocTitle")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("批文名称")
                                .isRequired(true)
                                .hint("请输入批文名称")
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocNo")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("批文文号")
                                .hint("请输入批文文号")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocPublishDate")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("批复日期")
                                .isRequired(true)
                                .formatValue("yyyy-MM-dd")
                                .hint("请选择批复日期")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("officialDocDueDate")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("有效期限")
                                .isRequired(true)
                                .formatDisplay("yyyy-MM-dd")
                                .formatValue("yyyy-MM-dd")
                                .hint("请选择有效期限")
                                .build())
                        .build())
                .addElement(new ElementBuilder("isLimit")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("长期有效")
                                .isRequired(false)
                                .dictArray(new DictBuilder().item("否").item("是").build())
                                .maxLimit(1)
                                .minLimit(1)
                                .defaultValue("否")
                                .build())
                        .build())

//                .addDivider()
//                .addElement(new ElementBuilder("attrOne")
//                        .widget(new WidgetBuilder(EDITTEXT)
//                                .title("企业名称")
//                                .hint("请输入")
//                                .isEnable(false)
//                                .build())
//                        .build())

                .addElement(new ElementBuilder("memo")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("选择文件")
                                .hint("请选择文件")
                                .build())
                        .build())
                .build();
    }

    private FormInfo getGcjsAddZjzz() {
        return new FormBuilder("")
                .title("新建批复")
                .addElement(new ElementBuilder("matId")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("证照")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("certinstCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("证照编码")
                                .isRequired(true)
                                .hint("请输入证照编码")
                                .build())
                        .build())
                .addElement(new ElementBuilder("issueDate")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("发证日期")
                                .isRequired(true)
                                .formatValue("yyyy-MM-dd")
                                .hint("请选择发证日期")
                                .formatDisplay("yyyy-MM-dd")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projScale")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设规模（m²）")
                                .hint("请输入面积")
                                .textInputType("numberDecimalSigned")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("certinstName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("证照名称")
                                .hint("请输入证照名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("issueOrgId")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("颁发单位")
                                .maxLimit(1)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("memo")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("备注")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("证照文件")
                                .build())
                        .build())
                .build();
    }

    //获取申报信息顶部的表单配置
    private FormInfo getGcjsSbxx() {
        return new FormBuilder("")
                .addElement(new ElementBuilder("applyinstCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申报流水号")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("createTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("申报时间")
                                .formatDisplay("yyyy-MM-dd HH:mm")
                                .formatValue("")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("themeName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目类型")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("stageName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申报阶段/辅线")
                                .isEnable(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("applySubject")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申报事项数")
                                .isEnable(false)
                                .isVisible(false)
                                .build())
                        .build())
                .build();
    }

    //单项申报-补全信息
    private FormInfo getGcjsPublicUploadEvent() {
        return new FormBuilder("")
                .title("基本信息")

                .addElement(new ElementBuilder("itemName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("事项名称")
                                .hint("请输入事项名称")
                                .build())
                        .build())
                .addElement(new ElementBuilder("itemName2")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("服务对象")
                                .hint("")
                                .build())
                        .build())
                .addElement(new ElementBuilder("orgName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("受理机构")
                                .hint("请输入文件标题")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目类型")
                                .hint("请输入项目类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projNature")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设性质")
                                .hint("请输入建设性质")
                                .build())
                        .build())
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目代码")
                                .hint("请输入项目代码")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目名称")
                                .hint("请输入项目名称")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目地址")
                                .hint("请输入项目地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("nstartTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目开工时间")
                                .formatValue("yyyy-MM-dd")
                                .formatDisplay("yyyy-MM-dd")
                                .hint("请选择项目开工时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("endTime")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目建成时间")
                                .formatValue("yyyy-MM-dd")
                                .formatDisplay("yyyy-MM-dd")
                                .hint("请选择项目建成时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("investSum2")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("备案文号")
                                .hint("请输入备案文号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("investSum")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总投资(万元)")
                                .hint("请输入总投资")
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设面积")
                                .hint("请输入建设面积")
                                .build())
                        .build())
                .addElement(new ElementBuilder("applicant")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业名称")
                                .hint("请输入企业名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("creater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业法人")
                                .isRequired(true)
                                .hint("请输入企业法人")
                                .build())
                        .build())
                .addElement(new ElementBuilder("idcard")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业法人证件")
                                .isRequired(true)
                                .textInputType("number")
                                .hint("请输入企业法人证件")
                                .build())
                        .build())
                .addElement(new ElementBuilder("idno")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业注册号")
                                .hint("请输入企业注册号")
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanName")
                        .widget(new WidgetBuilder(SPINNER_MULTI_FUNCTION)
                                .title("联系人姓名")
                                .isRequired(true)
                                .maxLimit(1)
                                .hint("请输入联系人姓名")
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanCertNo1")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("身份证号")
                                .isRequired(true)
                                .textInputType("number")
                                .digits("0123456789Xx")
                                .regex("(^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)")
                                .regexRemark("请输入正确的身份证号")
                                .hint("请输入身份证号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanMobilePhone1")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系电话")
                                .isRequired(true)
                                .textInputType("number")
                                .hint("请输入联系电话")
                                .build())
                        .build())
                .addDivider("办件结果取件方式")
                .addElement(new ElementBuilder("receive_mode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("领取模式")
                                .isRequired(true)
                                .dictArray(LocalDictUtil.getReceiveType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_type")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("取件方式")
                                .isRequired(true)
                                .dictArray(LocalDictUtil.getSendType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人姓名")
                                .isRequired(true)
                                .hint("请输入收件人姓名")
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_phone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人电话")
                                .isRequired(true)
                                .hint("请输入收件人电话")
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人地址")
                                .isRequired(true)
                                .hint("请输入收件人地址")
                                .build())
                        .build())

                .addElement(new ElementBuilder("draw_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人姓名")
                                .isRequired(true)
                                .isVisible(false)
                                .hint("请输入领取人姓名")
                                .build())
                        .build())
                .addElement(new ElementBuilder("draw_phone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人电话")
                                .isRequired(true)
                                .isVisible(false)
                                .hint("请输入领取人电话")
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("draw_card_num")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人身份证")
                                .isVisible(false)
                                .isRequired(true)
                                .hint("请输入领取人身份证")
                                .build())
                        .build())

                .build();
    }

    private FormInfo getGcjsPublicMultiUploadEvent() {
        return new FormBuilder("")
                .title("基本信息")
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目代码")
                                .hint("请输入项目代码")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目名称")
                                .hint("请输入项目名称")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目地址")
                                .hint("请输入项目地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业名称")
                                .hint("请输入企业名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitApplicant")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("申请单位")
                                .isRequired(true)
                                .hint("请输入申请单位")
                                .build())
                        .build())

                .addElement(new ElementBuilder("idcard")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("企业注册号")
                                .hint("请输入企业注册号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file8")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("备案文号")
                                .hint("请输入企业法人证件")
                                .build())
                        .build())
                .addElement(new ElementBuilder("applicator")
                        .widget(new WidgetBuilder(SPINNER_MULTI_FUNCTION)
                                .title("申请人")
                                .isRequired(true)
                                .hint("请选择申请人")
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanidcard")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("身份证号")
                                .isRequired(true)
                                .hint("请输入身份证号")
                                .textInputType("number")
                                .digits("0123456789Xx")
                                .regex("(^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$)|(^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}$)")
                                .regexRemark("请输入正确的身份证号")
                                .build())
                        .build())
                .addElement(new ElementBuilder("linkmanMobilePhone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("联系电话")
                                .isRequired(true)
                                .hint("请输入联系电话")
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("用地面积(㎡)")
                                .hint("请输入用地面积")
                                .build())
                        .build())
                .addElement(new ElementBuilder("buildAreaSum")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设面积(㎡)")
                                .hint("请输入建设面积")
                                .build())
                        .build())
                .addElement(new ElementBuilder("investSum")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总投资(万元)")
                                .hint("请输入总投资")
                                .build())
                        .build())
                .addElement(new ElementBuilder("scaleContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("建设内容")
                                .hint("请输入建设内容")
                                .build())
                        .build())
                .addDivider("办件结果取件方式")
                .addElement(new ElementBuilder("receive_mode")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("领取模式")
                                .isRequired(true)
                                .dictArray(LocalDictUtil.getReceiveType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_type")
                        .widget(new WidgetBuilder(CHECKBOX)
                                .title("取件方式")
                                .isRequired(true)
                                .dictArray(LocalDictUtil.getSendType())
                                .maxLimit(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人姓名")
                                .isRequired(true)
                                .hint("请输入收件人姓名")
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_phone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人电话")
                                .isRequired(true)
                                .hint("请输入收件人电话")
                                .build())
                        .build())
                .addElement(new ElementBuilder("receive_addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("收件人地址")
                                .isRequired(true)
                                .hint("请输入收件人地址")
                                .build())
                        .build())

                .addElement(new ElementBuilder("draw_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人姓名")
                                .isRequired(true)
                                .isVisible(false)
                                .hint("请输入领取人姓名")
                                .build())
                        .build())
                .addElement(new ElementBuilder("draw_phone")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人电话")
                                .isRequired(true)
                                .isVisible(false)
                                .hint("请输入领取人电话")
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("draw_card_num")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("领取人身份证")
                                .isVisible(false)
                                .isRequired(true)
                                .hint("请输入领取人身份证")
                                .build())
                        .build())

                .build();
    }

    private FormInfo getGcjsPublicNewProject() {
        return new FormBuilder("")
                .title("基本信息")
                .addElement(new ElementBuilder("projName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目/工程名称")
                                .hint("请输入项目名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("localCode")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目代码")
                                .isRequired(true)
                                .hint("请输入项目代码")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projName1")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("工程代码")
                                .hint("请输入工程代码")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr1")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("审批行政区划")
                                .dictArray(new DictBuilder().item("区级").item("市级").build())
                                .hint("请输入行政区划")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr2")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("建设地点")
                                .hint("请输入建设地点")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr14")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("资金来源")
                                .dictArray(new DictBuilder().item("政府").item("企业").item("混合").build())
                                .hint("请输入资金来源")
                                .build())
                        .build())
                .addElement(new ElementBuilder("investSum1")
                        .widget(new WidgetBuilder(RADIO)
                                .title("是否外资")
                                .dictArray(new DictBuilder().item("是").item("否").build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr12")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("投资类型")
                                .dictArray(new DictBuilder().item("国有").item("集体").item("民营")
                                        .item("外资")
                                        .item("合资")
                                        .item("其他").build())
                                .hint("请输入投资类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitName1")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("土地来源")
                                .dictArray(new DictBuilder().item("划拨用地").item("招牌挂用地")
                                        .item("协议出让用地").item("自有用地")
                                        .item("其他")
                                        .build())
                                .hint("请输入土地来源")
                                .build())
                        .build())
                .addElement(new ElementBuilder("investSum122")
                        .widget(new WidgetBuilder(RADIO)
                                .title("是否完成区域评估")
                                .dictArray(new DictBuilder().item("是").item("否").build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("inv2estSum122")
                        .widget(new WidgetBuilder(RADIO)
                                .title("土地是否带设计方案")
                                .dictArray(new DictBuilder().item("是").item("否").build())
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr9")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("立项类型")
                                .hint("请输入立项类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr11")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目类型")
                                .hint("请输入项目类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitName3")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("建设性质")
                                .hint("请输入建设性质")
                                .dictArray(new DictBuilder().item("新建").item("扩建")
                                        .item("迁建(重建)")
                                        .item("改建")
                                        .item("其他")
                                        .build())
                                .build())
                        .build())


                .addElement(new ElementBuilder("unitName4")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("工程分类")
                                .hint("请输入工程分类")
                                .dictArray(new DictBuilder().item("民用").item("工业建筑").build())
                                .build())
                        .build())

                .addElement(new ElementBuilder("unitName145")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("项目开工时间")
                                .hint("请输入项目开工时间")
                                .build())
                        .build())
                .addElement(new ElementBuilder("unitName146")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("项目建成时间")
                                .hint("请输入项目建成时间")
                                .build())
                        .build())

                .addElement(new ElementBuilder("investSum")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总投资(万元)")
                                .hint("请输入总投资")
                                .build())
                        .build())
                .addElement(new ElementBuilder("district10")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总建筑面积(㎡)")
                                .hint("请输入总建筑面积")
                                .build())
                        .build())


                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("用地面积(㎡)")
                                .hint("请输入用地面积")
                                .build())
                        .build())

                .addElement(new ElementBuilder("projAddr1334")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("重点项目")
                                .dictArray(new DictBuilder().item("区级").item("市级").build())
                                .hint("请输入重点项目")
                                .build())
                        .build())

                .addElement(new ElementBuilder("distric33t")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("国标行业")
                                .hint("请输入国标行业")
                                .build())
                        .build())

                .addElement(new ElementBuilder("distric333t")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("国标行业发布年代")
                                .hint("请输入国标行业发布年代")
                                .build())
                        .build())

                .addElement(new ElementBuilder("scaleContent")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("建设内容(包括必要性)")
                                .hint("请输入建设内容")
                                .build())
                        .build())

                .addElement(new ElementBuilder("projAddr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("项目地址")
                                .hint("请输入项目地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr3")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("区(园区)")
                                .hint("请输入区(园区)")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr4")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("街道")
                                .hint("请输入街道地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr5")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("四至范围 东至")
                                .hint("请输入东至地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr6")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("南至")
                                .hint("请输入南至地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr7")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("北至")
                                .hint("请输入北至地址")
                                .build())
                        .build())
                .addElement(new ElementBuilder("projAddr8")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("西至")
                                .hint("请输入西至地址")
                                .build())
                        .build())


                .build();
    }

    private FormInfo getGcjsPublicMultiSecondUploadEvent() {
        return new FormBuilder("")
                .addElement(new ElementBuilder("theme")
                        .widget(new WidgetBuilder(RADIO_CHECKBOX)
                                .title("主题")
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .allowTextInput(false)
                                .isRequired(true)
                                .columnCount(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("stage")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("阶段")
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .allowTextInput(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("situation")
                        .canSummon(true)
                        .widget(new WidgetBuilder(RADIO_CHECKBOX)
                                .title("情形")
                                .maxLimit(1)
                                .columnCount(1)
                                .build())
                        .build())
                .addElement(new ElementBuilder("item")
                        .widget(new WidgetBuilder(CHECKBOX_EXPAND)
                                .title("事项")
                                .allowCancelCheck(false)
                                .allowTextInput(false)
                                .isRequired(false)
                                .isEnable(false)
                                .columnCount(1)
                                .build())
                        .build())

                .build();
    }


    private FormInfo getDrainageFacilityPipe() {
//        标识码
//                地址
//        管道名称
//                所在道路
//        等级
//                类别
//        管道材质
//                是否围压
//        起始管点标识码
//                终止管点标识码
//        起始管底高程
//                起始埋深
//        终止管底高程
//                终止埋深
//        管径
//                断面形式
//        坡度
//                管理单位设施状态 敷设类型权属单位行政区划长度
//        设施状态
//                敷设类型
//        权属单位
//                行政区划
//        长度
        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管道名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("grade")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("等级")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("material")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管道材质")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("is_press")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("是否围压")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("start_usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("起始管点标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("end_usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("终止管点标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("beg_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("起始管底高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("begcen_deep")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("起始埋深")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("end_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("终止管底高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("endcen_deep")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("终止埋深")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("d_s")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管径")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("style")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("断面形式")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("i")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("坡度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("subtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("敷设类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("行政区划")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("length")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("长度")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilityYj() {
        //标识码 窨井名称 地址 类别 窨井类型 行政区划 权属单位 管理单位 设施状态 井盖型号 井盖材质 井室材质
        //地面高程 井室顶高程 井底高程 井室平面面积 井底状况 数据来源 备注 所在道路 井盖大小 最低流水位高程
        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("窨井名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("subtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("窨井类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("行政区划")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cover_type")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖型号")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cover_material")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖材质")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sur_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地面高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("井室顶高程")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井室顶高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bottom_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井底高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("井室平面面积")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井室平面面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("well_status")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井底状况")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("data_origin")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("数据来源")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("remark")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("备注")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cover_size")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("井盖大小")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bt_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("最低流水位高程")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilitySz() {
//        标识码 闸名称 所在道路 地址 所在河流 类别 控制类型 排数 设计排水流量 闸顶高程 闸门启闭形式 闸门孔数 闸门净高
//        闸门净宽 闸门材质 占地面积 汇水面积 权属单位 管理单位 设施状态 行政区划 实际排水流量 闸编号

        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("subtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("控制类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("row_num")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排数")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("flux")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计排水流量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("top_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸顶高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("switch_style")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸门启闭形式")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("num")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸门孔数")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("height")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸门净高")
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("width")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸门净宽")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gate_material")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸门材质")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("use_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("占地面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("coll_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("汇水面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("actualflow")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际排水流量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("gate_id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("闸编号")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilityPfk() {
//        标识码 地址 排放口名称 类别 排放去向 行政区划 权属单位 管理单位
//        设施状态 地面高程 所在道路 顶部高程 底部高程 设计流量
        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排放口名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("river")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排放去向")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sur_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地面高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("top_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("顶部高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bottom_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("底部高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("flux")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计流量")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilityBz() {
//        标识码 泵站名称 所属工程名称 泵站类别 装机容量 警戒水位 控制水位 警戒水位 汇水面积 设计抽排能力 投入运行日期
//        服务面积 地址 权属单位 管理单位 设施状态 行政区划 溢流地点 实际抽排量 泵站编号 主供电源 占地面积 所在道路
        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("泵站名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("project_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所属工程名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bz_sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("泵站类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("devicecacity")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("装机容量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("start_water_level")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("第一次预警水位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("control_water_level")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("控制水位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("warn_water_level")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("警戒水位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("catchment_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("汇水面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("design_capacity")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计抽排能力")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("startup_date")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("投入运行日期")
                                .isRequired(true)
                                .build())
                        .build())

                .addElement(new ElementBuilder("service_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("服务面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("overflowp")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("溢流地点")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("actual_capacity")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际抽排量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("station_id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("泵站编号")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("main_power_supply")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("主供电源")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("use_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("占地面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilityYsk() {
//        标识码 雨水口名称 地址 所在道路 行政区划 所在污水系统 所在雨水系统 所属工程名称 权属单位 管理单位
//        设施状态 雨水篦类型 特征 形式 地面高程
        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("雨水口名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("lane_way")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在道路")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sewagesystem_id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在污水系统")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("rainesystem_id")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在雨水系统")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("project_name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所属工程名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("subtype")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("雨水篦类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("feature")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("特征")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("style")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("形式")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sur_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地面高程")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getDrainageFacilityPm() {
//        标识码 拍门名称 型号 材质 拍门尺寸 地面高程 埋深 顶部高程 最低流水位 数据来源
//        地址 所在河涌 类别 行政区划 权属单位 管理单位 设施状态

        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("拍门名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mode_")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("型号")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("material")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("材质")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("size_")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("拍门尺寸")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sur_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地面高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cen_deep")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("埋深")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("top_h")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("顶部高程")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("w_level")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("最低流水位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("data_origin")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("数据来源")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("river")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("所在河涌")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("sort")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("类别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("state")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设施状态")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }


    private FormInfo getDrainageFacilityWsc() {
//        标识码 污水处理厂名称 电话 悬浮物出水浓度 污泥处理方法 污泥量 污泥含水量 排入河涌 占地面积 服务面积
//        服务人口数 建设规模 权属单位 管理单位 行政区划 实际日处理量 BOD5进水浓度 BOD5出水浓度 CODcr进水浓度
//        CODcr出水浓度 悬浮物进水浓度 进水PH值 出水PH值 氨氮进水浓度 氨氮出水浓度 总氮进水浓度 总磷出水浓度
//        总磷进水浓度 竣工日期 总氮出水浓度 日处理用电量 负责人姓名 员工人数 吨水处理能耗 污水处理工艺 处理级别
//        实际处理能力 设计规模 邮编 地址

        return new FormBuilder("")
                .addElement(new ElementBuilder("usid")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("标识码")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("name")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("污水处理厂名称")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("tel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("电话")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ss_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("悬浮物出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("p_mud")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("污泥处理方法")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mud_num")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("污泥量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("mud_wratio")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("污泥含水量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("river")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("排入河涌")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("use_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("占地面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("serv_area")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("服务面积")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("serv_pnum")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("服务人口数")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bs_cope")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("建设规模")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ownerdept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("权属单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("managedept")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("管理单位")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("district")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("行政区划")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("diposeperday")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际日处理量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bod_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("BOD5进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("bod_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("BOD5出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cod_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("CODcr进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("cod_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("CODcr出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ss_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("悬浮物进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ph_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("进水PH值")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("ph_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("出水PH值")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("nh_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("氨氮进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("nh_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("氨氮出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("tn_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总氮进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("tp_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总磷出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("tp_en")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总磷进水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("finish_date")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("竣工日期")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("tn_ex")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("总氮出水浓度")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("electro")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("日处理用电量")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("principalname")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("负责人姓名")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("workers")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("员工人数")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("p_waste")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("吨水处理能耗")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("technical")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("污水处理工艺")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("disposelevel")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理级别")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("capabillty")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际处理能力")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("designs_cope")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("设计规模")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("post")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("邮编")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("地址")
                                .isRequired(true)
                                .build())
                        .build())

                .build();
    }

    private FormInfo getQualityComplain() {
        return new FormBuilder("FORM_QUALITY_COMPLAIN")
                .addElement(new ElementBuilder("problemRiver")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题河流")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("发现地址")
                                .isShowMap(false)
                                .isEnable(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("投诉类型")
                                .build())
                        .build())
                .addElement(new ElementBuilder("mobile")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .textInputType("phone")
                                .title("投诉人电话")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problem")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("附件")
                                .build())
                        .build())
                .build();
    }

    private FormInfo getRiverUpload() {
        return new FormBuilder("FORM_RIVER_UPLOAD")
                .addElement(new ElementBuilder("problemRiver")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题河流")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("addr")
                        .widget(new WidgetBuilder(MAP_ARCGIS)
                                .title("发现地址")
                                .isShowMap(false)
                                .isEnable(true)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemType")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("问题类型")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problem")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("creater")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isVisible(false)
                                .build())
                        .build())
//                .addElement(new ElementBuilder("mobile")
//                        .widget(new WidgetBuilder(EDITFIELD)
//                                .title("联系电话")
//                                .isVisible(false)
//                                .build())
//                        .build())
                .addElement(new ElementBuilder("createTime")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .isVisible(false)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveWay")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理措施")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理结果")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveRemark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理备注")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("附件")
                                .isVisible(true)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getPSHProblemUpload() {
        return new FormBuilder("FORM_PSH_PROBLEM_UPLOAD")
                .addElement(new ElementBuilder("dpiId")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("排水户")
                                .isRequired(true)
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("pbtp")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("上报类型")
                                .maxLimit(1)
                                .isRequired(true)
                                .allowCancelCheck(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("type")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("设施类型")
                                .isRequired(true)
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("poblm")
                        .widget(new WidgetBuilder(SPINNER)
                                .title("问题类型")
                                .maxLimit(1)
                                .allowCancelCheck(false)
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("dpt")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("规定排水")
                                .isVisible(false)
                                .hint("立方米每天")
                                .isRequired(true)
                                .textInputType("number")
                                .build())
                        .build())
                .addElement(new ElementBuilder("filldpt")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("实际排水")
                                .hint("立方米每天")
                                .isRequired(true)
                                .textInputType("number")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("pbdc")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("问题描述")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("rpotName")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("上报人")
                                .isVisible(false)
                                .build())
                        .build())
//                .addElement(new ElementBuilder("mobile")
//                        .widget(new WidgetBuilder(EDITFIELD)
//                                .title("联系电话")
//                                .isVisible(false)
//                                .build())
//                        .build())
                .addElement(new ElementBuilder("stdp")
                        .widget(new WidgetBuilder(TIMEPICKER)
                                .title("上报时间")
                                .isVisible(false)
                                .formatValue("")
                                .formatDisplay("yyyy-MM-dd HH:mm:ss")
                                .build())
                        .build())
                .addElement(new ElementBuilder("file")
                        .widget(new WidgetBuilder(FILEPICKER)
                                .title("附件")
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveWay")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理措施")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理结果")
                                .isVisible(false)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveRemark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理备注")
                                .isVisible(false)
                                .build())
                        .build())
                .build();
    }

    private FormInfo getDealProblem() {
        return new FormBuilder("DEAL_PROBLEM")
                .addElement(new ElementBuilder("problemSolveWay")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理措施")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveResult")
                        .widget(new WidgetBuilder(EDITTEXT)
                                .title("处理结果")
                                .isRequired(true)
                                .build())
                        .build())
                .addElement(new ElementBuilder("problemSolveRemark")
                        .widget(new WidgetBuilder(EDITFIELD)
                                .title("处理备注")
                                .isRequired(true)
                                .build())
                        .build())
                .build();
    }

}
